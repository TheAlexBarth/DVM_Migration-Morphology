[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Migrator Morphology",
    "section": "",
    "text": "Here, I investigate how diel vertical migration varies between copepods based on morphotypes determined from in-situ imaging."
  },
  {
    "objectID": "main_00_CTD-UVP-map.html",
    "href": "main_00_CTD-UVP-map.html",
    "title": "CTD & UVP cast locations",
    "section": "",
    "text": "Code\nrm(list = ls())\nlibrary('ggplot2')\nlibrary('rnaturalearth')\nlibrary('rnaturalearthdata')\n\n# |- get spatial data ----------\nworld <- ne_countries(scale = 'medium', returnclass = 'sf')\n\n# |- read in data -----------------\ncast_loc <- readRDS('../data/01_ctd-locations.rds')\n\n\n\n\nCode\nall_cast_map <- ggplot()+\n  geom_sf(data = world, fill = 'green')+\n  geom_point(aes(x = -cast_loc$lon, y = cast_loc$lat,\n                 shape = cast_loc$tod, col = cast_loc$tod),\n             position = position_jitter(width = .05, height = 0.05))+\n  coord_sf(xlim = c(-65,-62), ylim = c(30,33))+\n  theme_bw()+\n  labs(x = \"\",y = \"\", shape = \"\", color = \"\")+\n  scale_color_manual(values = c('beige','black'))+\n  theme(panel.background = element_rect(fill = 'cornflowerblue'),\n        axis.text.x = element_text(angle = 45, hjust = c(1,1)),\n        legend.position = 'bottom')\n\nprint(all_cast_map)\n\n\n\n\n\n\n\nCode\nlibrary(DT)\nlibrary(dplyr)\nuvp_data <- readRDS('../data/01_uvp-trim-final_large.rds')\n\n# get max_d\npar_max_d <- function(par_df) {\n  par_df[['depth']] |> max()\n}\n\nmax_d <- uvp_data$par_files |> \n  sapply(par_max_d)\n\nuvp_data$meta |> \n  select(profileid, latitude,longitude, cruise, sampledate) |> \n  left_join(data.frame(profileid = names(uvp_data$par_files),\n                       max_depth = max_d)) |> \n  group_by(cruise) |> \n  datatable()"
  },
  {
    "objectID": "main_01_ctd_interp.html",
    "href": "main_01_ctd_interp.html",
    "title": "Physical Backdrop - water column parameters across study period",
    "section": "",
    "text": "Code\nrm(list = ls())\nlibrary(ggplot2)\nlibrary(ggpubr)\nfull_proj_values <- readRDS('../data/ctd_02_interp-grid.rds')$full_proj\n\nODV_colours <- c(\"#feb483\", \"#d31f2a\", \"#ffc000\", \"#27ab19\", \"#0db5e6\", \"#7139fe\", \"#d16cfa\")\n\n# set up\nvalue_class <- function(cruise){\n  ret_list <- vector('list',4)\n  names(ret_list) <- c('Sal',\"Temperature\",'RFU','DO')\n  return(ret_list)\n}\n\nfull_proj_plot <- list()\nfull_proj_plot$early <- value_class()\nfull_proj_plot$late <- value_class()\n\n\n# |- Plotting -----------------------\nfor(i in 1:length(full_proj_plot)) {\n  \n  full_proj_plot[[i]]$Sal <- ggplot()+\n    geom_tile(data = full_proj_values[[i]]$Sal,\n              aes(x = Date,\n                  y = Depth,\n                  fill = Sal)) +\n    scale_y_reverse()+\n    scale_fill_distiller(palette = 'Spectral')+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    scale_x_datetime(date_labels = '%Y-%b')+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"Sal [PSU]\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n  full_proj_plot[[i]]$Temperature <- ggplot()+\n    geom_tile(data = full_proj_values[[i]]$Temperature,\n              aes(x = Date,\n                  y = Depth,\n                  fill = Temperature)) +\n    scale_y_reverse()+\n    scale_x_datetime(date_labels = '%Y-%b')+\n    scale_fill_gradientn(colors = rev(ODV_colours))+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"Temperature\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n  full_proj_plot[[i]]$RFU <- ggplot() + \n    geom_tile(data = full_proj_values[[i]]$RFU,\n              aes(x = Date,\n                  y = Depth,\n                  fill = RFU)) +\n    scale_y_reverse()+\n    scale_x_datetime(date_labels = '%Y-%b')+\n    scale_fill_distiller(palette = 'BuGn',\n                         direction = 1)+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"RFU\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n  full_proj_plot[[i]]$DO <- ggplot() + \n    geom_tile(data = full_proj_values[[i]]$DO,\n              aes(x = Date,\n                  y = Depth,\n                  fill = DO)) +\n    scale_y_reverse()+\n    scale_fill_distiller(palette = 'GnBu',\n                         direction = 1)+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"DO\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n}\n\n\n\n\nCode\nggarrange(full_proj_plot$early$Sal +\n            theme(axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1)),\n          full_proj_plot$late$Sal +\n            theme(axis.text.y = element_blank(),\n                  axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1))+\n            labs(y = \"\"),\n          common.legend = T,\n          legend = 'right',\n          nrow = 1,\n          widths = c(0.2,0.8),\n          align = 'hv')\n\n\n\n\n\nFigure 1a. Salinity values across whole study period interpolated from ctd casts.\n\n\n\n\n\n\nCode\nggarrange(full_proj_plot$early$Temperature +\n            theme(axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1)),\n          full_proj_plot$late$Temperature +\n            theme(axis.text.y = element_blank(),\n                  axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1))+\n            labs(y = \"\"),\n          common.legend = T,\n          legend = 'right',\n          nrow = 1,\n          widths = c(0.2,0.8),\n          align = 'hv')\n\n\n\n\n\nFigure 1b. Temperature values across whole study period interpolated from ctd casts.\n\n\n\n\n\n\nCode\nggarrange(full_proj_plot$early$RFU +\n            theme(axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1)),\n          full_proj_plot$late$RFU +\n            theme(axis.text.y = element_blank(),\n                  axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1))+\n            labs(y = \"\"),\n          common.legend = T,\n          legend = 'right',\n          nrow = 1,\n          widths = c(0.2,0.8),\n          align = 'hv')\n\n\n\n\n\nFigure 1c. RFU values across whole study period interpolated from ctd casts.\n\n\n\n\n\n\nCode\nggarrange(full_proj_plot$early$DO +\n            theme(axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1)),\n          full_proj_plot$late$DO +\n            theme(axis.text.y = element_blank(),\n                  axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1))+\n            labs(y = \"\"),\n          common.legend = T,\n          legend = 'right',\n          nrow = 1,\n          widths = c(0.2,0.8),\n          align = 'hv')\n\n\n\n\n\nFigure 1d. DO values across whole study period interpolated from ctd casts."
  },
  {
    "objectID": "main_02_PC-Clusters.html",
    "href": "main_02_PC-Clusters.html",
    "title": "Morphogroup Definition",
    "section": "",
    "text": "Code\nrm(list = ls())\nlibrary(DT)\nlibrary(EcotaxaTools)\nlibrary(ggplot2)\nlibrary(ggpubr)\nsource('../R/tools.R')\n\npca_results <- readRDS('../data/02_cope-pca-res.rds')\ncluster_res <- readRDS('../data/02_cluster-copepods.rds')"
  },
  {
    "objectID": "main_02_PC-Clusters.html#morphogroup-definition-separation",
    "href": "main_02_PC-Clusters.html#morphogroup-definition-separation",
    "title": "Morphogroup Definition",
    "section": "Morphogroup definition separation",
    "text": "Morphogroup definition separation\nThe morphogroups defined by clustering in the PC-morphology space do not lend themselves to clear groupings. However, by inspecting the groups in the context of the morphospace, it can determined the characteristics best used to describe each group. Visually, it was determined that Cluster 1 can best be described by moderate sized and more transparent. Cluster 2 follows the smallest values on PC1 indicating that it is primarily composed of smaller copepods. Cluster 3 was best described by low values of PC2, interpreted as correlating to darker individuals. Finally, cluster 4 contains individuals with high PC1 scores and thus the larger copepods.\nTo assure that these clusters were not trivial, each morphogroup’s scores on PC1 and PC2 were compared with pairwise Dunn tests. It was revealed that all groups were significantly different from one another along PC1 and PC2 (p < 0.001 following Bonferroni correction for all groups).\n\n\nCode\nFSA::dunnTest(PC1 ~ as.factor(cluster),\n              data = cluster_res,\n              method = 'bonferroni')$res |> \n  datatable(caption = 'PC1 Dunn multiple comprison test with bonferroni correction')\n\n\n\n\n\n\n\nCode\npc1_dist <- ggplot(cluster_res) +\n  geom_boxplot(aes(x = as.factor(cluster),\n                   y = PC1,\n                   fill = as.factor(cluster))) +\n  scale_fill_manual(values = gg_cbb_col(4))+\n  labs(x = \"Morphogroup\", y = 'PC1 - Size: Small-to-Large') + \n  theme_pubr() +\n  theme(legend.position = 'none')\n\n\nFSA::dunnTest(PC2 ~ as.factor(cluster),\n              data = cluster_res,\n              method = 'bonferroni')$res |> \n  datatable(caption = 'PC2 Dunn multiple comprison test with bonferroni correction')\n\n\n\n\n\n\n\nCode\npc2_dist <- ggplot(cluster_res) +\n  geom_boxplot(aes(x = as.factor(cluster),\n                   y = PC2,\n                   fill = as.factor(cluster))) +\n  scale_fill_manual(values = gg_cbb_col(4))+\n  labs(x = \"Morphogroup\", y = 'PC2 - Trans: dark-to-light') + \n  theme_pubr()+\n  theme(legend.position = 'none')\n\nggarrange(pc1_dist, pc2_dist, nrow=1)\n\n\n\n\n\nAdditionally, to exemplify morphogroup differences along original parameters, we plotted the distribution of individual metrics for key morphological parameters representing size and transparency.\n\n\nCode\nuvp_data <- readRDS('../data/01_uvp-trim-final_large.rds') |> \n  trim_to_cope()\n\n####\n# Assign Clusters to individuals ########\n####\n\nfor(i in 1:length(uvp_data$zoo_files)) {\n  idx <- which(cluster_res$orig_id %in% uvp_data$zoo_files[[i]]$orig_id)\n  uvp_data$zoo_files[[i]]$cluster <- cluster_res$cluster[idx]\n}\n\nall_copes <- uvp_data$zoo_files |> \n  list_to_tib('profileid')\n\n# convert to mm\nall_copes$feret <- all_copes$feret * unique(uvp_data$meta$acq_pixel)\n\nferet_plot <- ggplot(all_copes) + \n  geom_boxplot(aes(x = as.factor(cluster),\n                   y = feret,\n                   fill = as.factor(cluster))) +  scale_fill_manual(values = gg_cbb_col(4))+\n  labs(x = \"Morphogroup\", y = 'Feret Diam [mm]') + \n  theme_pubr()+\n  theme(legend.position = 'none')\n\nmeanGrey_plot <- ggplot(all_copes) + \n  geom_boxplot(aes(x = as.factor(cluster),\n                   y = mean,\n                   fill = as.factor(cluster))) +  scale_fill_manual(values = gg_cbb_col(4))+\n  labs(x = \"Morphogroup\", y = 'Mean Grey Value') + \n  theme_pubr()+\n  theme(legend.position = 'none')\n\nggarrange(feret_plot, meanGrey_plot, rnow = 1)"
  },
  {
    "objectID": "main_03_Vert-Distrib.html",
    "href": "main_03_Vert-Distrib.html",
    "title": "Vertical Distribution of Morphotypes",
    "section": "",
    "text": "To understand the vertical distribution of the different morphogroups, the concentration of each cluster was calculated in a 20m-bin then averaged across all profiles in the study (following the average-cast method described in Barth & Stone 2022. Using the average-cast approach is beneficial as it allows for data to be included from casts with different max descents, so long as an entire 20m depth bin was sampled, it is included.Averages were calculated separately for daytime and nighttime casts.\nThen to better visualize day/night differences, the proportional difference in each depth bin was calculated. For each \\(i^{th}\\) depth bin in all \\(N\\) bins, \\(PropDiff_{i} = \\frac{Night_{i} - Day_i}{\\sum_{i}^N{Night_i+Day_i}}\\). This technique shows how much more a nighttime abundance is compared to the daytime relative to the total, average concentration of the morphogroup. Thus, morphogroup proportional differences can be compared to see overall trends in diel patterns across the water column. However, it is important to note that this method does not directly evaluate any magnitude of DVM."
  },
  {
    "objectID": "main_03_Vert-Distrib.html#figures-take-aways",
    "href": "main_03_Vert-Distrib.html#figures-take-aways",
    "title": "Vertical Distribution of Morphotypes",
    "section": "Figures & Take-aways:",
    "text": "Figures & Take-aways:\nFirst, it is clear the smaller-sized morphogroups (morphogroup 2) occurred in higher abundances. This is again expected as smaller zooplankton dominate in this system. Interestingly, this logic would predict that morphogroup 1 would be more abundant than morphogroup 3. However, the opposite is true in this data set. One possibility is that smaller, transparent copepods are likely to not be adequately identified by annotators. Morphogroup 4 is the least abundant and this is consistent across seasons. For all morphogroups, nighttime abundances are higher in the surface (0-200m) compared to the daytime surface abundances. Overall abundances are lowest around 300m with a daytime abundance dominated region around the upper-to-mid mesopelagic (400-600m). This pattern shows a clear DVM occurring in all morphogroups between around 150m-600m. Below 600m, there is no trend in day/night differences and the variation in proportional differences seems to be random noise. This is expected as it would be nearly impossible for regular migrations of individual copepods to move below 600m on a daily basis. It is also clear that the variability between casts is extremely large. Often the standard deviation of depth-bin abundance is much larger than the average abundance. This is in part driven by high variability between cruises which occurred in different seasons getting averaged together. However, there is also large variability between individual casts, which can be driven by the small sampling volume of the UVP as described by Barth & Stone 2022. This variation driven by the sampling variability led to the need for new analysis methods on in-situ imaging data used in this paper.\n\n\nCode\n####\n# Get project-wide night-day differences #######\n####\n\nrm(list = ls())\nlibrary(EcotaxaTools)\nlibrary(ggplot2)\nlibrary(ggpubr)\nsource('../R/tools.R')\n\ncluster_cope <- readRDS('../data/03_cluster-conc.rds')\nuvp_data  <- readRDS('../data/01_uvp-trim-final_large.rds') |> trim_to_cope()\n\ncast_times <- list(day = uvp_data$meta$profileid[which(uvp_data$meta$tod == 'day')],\n                   night = uvp_data$meta$profileid[which(uvp_data$meta$tod == 'night')])\n\navg_cope <- cluster_cope |> \n  average_casts(cast_times) |> \n  lapply(bin_format)\n\n\n###\n# Create cluster profiles ####\n###\n\n# |- Area Profile ----------------------------------------------------\n# profile_plot <- ggplot() +\n#   geom_area(data = avg_cope$day,\n#             aes(x = mp, y = -mean, fill = as.factor(group))) +\n#   geom_area(data = avg_cope$night,\n#             aes(x = mp, y = mean, fill = as.factor(group)))+\n#   geom_hline(yintercept = 0)+\n#   coord_flip()+\n#   scale_x_reverse(expand = c(0,0))+\n#   scale_y_continuous(breaks = c(-2:2),\n#                      labels = abs(-2:2),\n#                      expand = c(0,0))+\n#   labs(x = \"Depth [m]\",\n#        y = \"Concentration\",\n#        fill = 'Cluster')+\n#   scale_fill_manual(values = gg_cbb_col(4))+\n#   theme_pubr()\n\n# |- Concentration Profile --------------------------------------------\n\ncluster_profile <- function(k) {\n  ret_plot <- ggplot()+\n    geom_rect(data = avg_cope$day[avg_cope$day$group == k,],\n              aes(xmin = min_d, xmax = max_d,\n                  ymin = 0, ymax = -mean),\n              fill = dn_cols['day']) +\n    geom_errorbar(data = avg_cope$day[avg_cope$day$group == k,],\n                  aes(x = mp, ymin = -mean, ymax = -(mean+sd)),\n                  alpha = .25) +\n    geom_rect(data = avg_cope$night[avg_cope$night$group == k,],\n              aes(xmin = min_d, xmax = max_d,\n                  ymin = 0, ymax = mean),\n              fill = dn_cols['night']) +\n    geom_errorbar(data = avg_cope$night[avg_cope$night$group == k,],\n                  aes(x = mp, ymin = mean, ymax = (mean+sd)),\n                  alpha = .25)+\n    labs(x = 'Depth [m]', y = 'Concentration [indv./m3]')+\n    coord_flip()+\n    scale_x_reverse(expand = c(0,0))+\n    scale_y_continuous(position = 'right',\n                       labels = abs,\n                       limits = c(-3.25,3.25)) +\n    theme_pubr()\n\n  return(ret_plot)\n}\n\ncluster_1_profile <- cluster_profile(1)\ncluster_2_profile <- cluster_profile(2)\ncluster_3_profile <- cluster_profile(3)\ncluster_4_profile <- cluster_profile(4)\n\n# |- Proportional Difference ----------------------------------------\n\n# calculate the proportional difference between night and day profiles\n# this approach calculates the bin-specific night-day difference\n# \n\ndiff_profile <- function(k) {\n  ni_conc <- avg_cope$night$mean[which(avg_cope$night$group == k)]\n  day_conc <- avg_cope$day$mean[which(avg_cope$day$group == k)]\n  \n  diel_diff <- (ni_conc - day_conc) / sum(c(ni_conc, day_conc))\n  \n  mp <- avg_cope$night$mp[which(avg_cope$night$group == k)]\n  \n  ret_plot <- ggplot() + \n    geom_point(aes(x = mp, y = diel_diff),\n               size = 1.5, color = 'black')+\n    geom_line(aes(x = mp, y=diel_diff)) +\n    labs(x = 'Depth [m]', y = 'Proportional Difference') +\n    geom_hline(yintercept = 0) +\n    coord_flip()+\n    scale_x_reverse(expand = c(0,0)) +\n    scale_y_continuous(expand = c(0,0),\n                       position = 'right',\n                       labels = abs,\n                       limits = c(-.0225, .0399)) +\n    theme_pubr()+\n    theme()\n  \n  return(ret_plot)\n}\n\ndiff_1_profile <- diff_profile(1)\ndiff_2_profile <- diff_profile(2)\ndiff_3_profile <- diff_profile(3)\ndiff_4_profile <- diff_profile(4)\n\n\n\n\nCode\n#| column: page-outset\n\nggarrange(cluster_1_profile,\n          cluster_2_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()),\n          cluster_3_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()),\n          cluster_4_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()),\n          diff_1_profile,\n          diff_2_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()),\n          diff_3_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()),\n          diff_4_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()),\n          nrow = 2, ncol = 4,\n          widths = c(1,.9,.9,.9))\n\n\n\n\n\nWe can zoom in on the upper 600m to get a better picture of the changes in the upper layers.\n\n\nCode\n#| column: screen-inset\n\nggarrange(cluster_1_profile +\n            xlim(600,0),\n          cluster_2_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()) +\n            xlim(600,0),\n          cluster_3_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()) +\n            xlim(600,0),\n          cluster_4_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()) +\n            xlim(600,0),\n          diff_1_profile +\n            xlim(600,0),\n          diff_2_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()) +\n            xlim(600,0),\n          diff_3_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()) +\n            xlim(600,0),\n          diff_4_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()) +\n            xlim(600,0),\n          nrow = 2, ncol = 4,\n          widths = c(1,.9,.9,.9))"
  },
  {
    "objectID": "main_04_WMD-by-morphogroup.html",
    "href": "main_04_WMD-by-morphogroup.html",
    "title": "Weighted Mean Depth of Morphogroups",
    "section": "",
    "text": "Weighted mean depth is a commonly used metric to describe zooplankton populations and vertical distributions. Zooplankton populations can often be found in bimodal patterns throughout the water column, with a subsurface peak and a deeper mesopelagic peak see here. The WMD of a distribution effectively provides a center of mass for the zooplankton in the water column. However, interpreting the WMD often requires context as the depth itself may not be informative. WMD can be particularly useful for DVM studies, as it can show the differences in daytime and nighttime distributions Ohman & Romagnan 2016. Additionally, by calculating the average WMD across multiple samples, the variability (or standard deviation) in WMD can be informative to the overall spread of the zooplankton distribution throughout the water column.\nIn this study, because profiles extend to different depths and sampling effort (volume) is inconsistent between profiles, even in a depth bin, directly calculating the average WMD is not feasible. Instead, we take a depth-bin constrained bootstrap approach to define WMD for each morphogroup. In this approach, the concentration of each morphogroup was calculated in 20m depth bins for each profile. Then all profiles from the same time of day were ‘pooled’ providing a distribution of concentration values in each depth bin. From these distribution a value, \\(WMD^*\\), can be calculated where \\(d_i\\) is a 20m depth bin between (0m,20m] and (580,600] and \\(conc_i^*\\) is a randomly selected measured concentration. This processes was iterated 999 times to create a distribution of \\(WMD^*\\) for each morphogroup (\\(mg\\)) and time of day (\\(tod\\)). This effectively is re-sampling of the study region for a given time of day to construct new profiles. \\[WMD^*_{mg, tod} = \\sum_{i}^{N = 60}{\\frac{d_i(conc^*_{i,mg,tod})}{\\sum_i^{N = 60}{conc^*_{i,mg,tod}}}}\\] From the distribution of \\(WMD^*\\), the mean and 95% confidence interval can be calculated. The confidence interval will be widened both by the spread of zooplankton through the water column and the variability between profiles. This provides the ability to directly quantify a DVM signal, as the daytime and nighttime confidence intervals should not overlap if there is a consistent and compact trend of copepods occupying distinct layers of the water column. Following the hypothesis H1, we would expect the DVM signal to be largest for Morphogroup 2, as it contains the larger and darker copepods. It follows that Morphogroup 3 should then have the smallest DVM signal."
  },
  {
    "objectID": "main_04_WMD-by-morphogroup.html#key-figures-and-takeaways",
    "href": "main_04_WMD-by-morphogroup.html#key-figures-and-takeaways",
    "title": "Weighted Mean Depth of Morphogroups",
    "section": "Key Figures and Takeaways",
    "text": "Key Figures and Takeaways\nShown in the figure below, it can be seen that all morphogroups have distinct daytime and nighttime WMDs (non-overlapping CI). This indicates a clear signal for DVM. Generally, the nighttime WMD confidence intervals are similar across all morphogroups, suggesting all groups concentrate towards the surface at night. Additionally, daytime WMD intervals span a deeper range for all morphogroups. The average daytime WMD is clearly deeper for morphogroup 3 and 2 compared to morphogroup 4. This result is surprising. The hypothesis that visual risk drives DVM predicts that darker copepods (morphogroup 3) need to migrate further. However, it would also be expected that morphogroup 4 (larger copepods) would need to migrate further than morphogroup 2 (smaller copepods). One possibility is that the few observations of morphogroup 4 resulted in a falsely-small confidence interval for WMD. \n\n\nCode\nlibrary(ggplot2)\nlibrary(ggpubr)\nsource('../r/tools.R')\n\nboot_wmd <- readRDS('../data/03_wmd-all-merged.rds')\n\nday_summary <- boot_wmd$day |> lapply(quantile, probs = c(0.025,0.5,0.975))\nnight_summary <- boot_wmd$night |> lapply(quantile, probs = c(0.025,0.5,0.975))\n\nwmd_df <- data.frame(cluster = rep(1:4, 2),\n                     tod = rep(c('day','night'),each = 4),\n                     low = rep(NA, 8),\n                     mid = rep(NA, 8),\n                     high = rep(NA, 8))\n\nfor(i in 1:4) {\n  \n  wmd_df$low[which(wmd_df$tod == 'day' & \n                     wmd_df$cluster == i)] <- day_summary[[i]][['2.5%']]\n  wmd_df$mid[which(wmd_df$tod == 'day' & \n                     wmd_df$cluster == i)] <- day_summary[[i]][['50%']]\n  wmd_df$high[which(wmd_df$tod == 'day' & \n                     wmd_df$cluster == i)] <- day_summary[[i]][['97.5%']]\n  \n  \n  wmd_df$low[which(wmd_df$tod == 'night' & \n                     wmd_df$cluster == i)] <- night_summary[[i]][['2.5%']]\n  wmd_df$mid[which(wmd_df$tod == 'night' & \n                     wmd_df$cluster == i)] <- night_summary[[i]][['50%']]\n  wmd_df$high[which(wmd_df$tod == 'night' & \n                     wmd_df$cluster == i)] <- night_summary[[i]][['97.5%']]\n  \n}\n\n\nggplot(wmd_df) +\n  geom_point(aes(x = cluster,\n                 y = mid,\n                 color = tod),\n             position = position_dodge(width = .5),\n             size = 2) +\n  geom_errorbar(aes(x = cluster,\n                    ymin = low,\n                    ymax = high,\n                    color = tod),\n                width = .25,\n                position = position_dodge(width = .5),\n                size = 1) +\n  scale_color_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n  scale_y_reverse(limits = c(600,0)) +\n  labs(y = 'Depth [m]', x = 'Morphogroup Cluster', col = \"\")+\n  theme_pubr()\n\n\n\n\n\n\n\nCode\nDT::datatable(wmd_df)"
  },
  {
    "objectID": "main_05_all-copepod-occupancy.html",
    "href": "main_05_all-copepod-occupancy.html",
    "title": "Copepod Occupancy Model - General Detection Probability",
    "section": "",
    "text": "A key challenge with the UVP, and other in-situ imaging tools, is the low sampling volume can make it challenging to accurately report organisms with occur at low abundances. This is a particularly large challenge in an oligotrophic system such as the Sargasso Sea Barth & Stone 2022. Bisson et al. (2022) note that at low sampling volumes, the expected variance of large particle (or zooplankton) concentration) is often larger than the measured concentration. Due to this low-sampling volume issue, estimates of copepod abundance can be greatly driven by whether or not an individual was observed. As a result, using data as presence/absence offers a more reliable way to investigate copepod DVM in this system."
  },
  {
    "objectID": "main_05_all-copepod-occupancy.html#methodology",
    "href": "main_05_all-copepod-occupancy.html#methodology",
    "title": "Copepod Occupancy Model - General Detection Probability",
    "section": "Methodology",
    "text": "Methodology\nSite-occupancy models are an approach popularized in terrestrial and conservation biology, often with modelling rare species distribution. A powerful aspect of these class of models is the ability to separately estimate the occurrence probability (occupancy) and the detection probability (how likely it is to observe an organism in a site given it is actually there). Clearly, application of site-occupancy models to in-situ imaging data is attractive as the detection of zooplankton is a function of volume sampled while the zooplankton’s occupancy of a given depth, time, or region are a function of environmental or biological factors. Here, we employ site-occupancy models to attempt to model the occupancy of copepods, and then the four morphogroups, throughout the water column at daytime and nighttime. These models can also be used to test the hypotheses regarding DVM signal, as they predict that there will be differences in daytime and nighttime occupancy at the surface. At a basic level, the site-occupancy model is a bayesian hierarchical model with two main components. The biological component, \\(z_i \\sim Bernoulli(\\psi)\\), where \\(z_i\\) is the event that site \\(i\\) is occupied, with probability \\(\\psi\\). Then there is the observation process, \\(Y_{ij} \\sim Bernoulli(p_{ij}*z_{i})\\), where \\(Y_{ij}\\) is the event of observing an organism at site \\(i\\), during survey \\(j\\). The observation process thus is a bernoulli process, with the probability a function of both the detection probability \\(p_{ij}\\) and the occurrence probability \\(z_{i}\\). A requirement to adequately estimate \\(p_{ij}\\), is replicate “surveys”, \\(j\\), over a given “site”, \\(i\\). To apply this model to our system, we treat each profile as a “survey” to the “site” of a cruise in the BATS region. This approach is fundamentally similar to the pool-cast approach, commonly used in imaging studies, where all casts in a region are treated a joint observations of a larger water mass. First to evaluate the overall efficacy of site-occupancy approach, we modeled occurrence of all copepods (regardless of morphogroup) in each depth-bin following a simple model. This model was ran for each depth-bin (20m intervals from 0-1200m) and each time of day (day or night). The occupancy (\\(\\psi\\)), was assumed to be a unique, independent probability for each depth bin while the detection probability was modelling using a logistic regression to include the effect of volume sampled (\\(vs\\)). If the site occupancy model is effective in this system, it would be expected that there would be a positive effect of volume sampled on the detection probability. The models were ran three separate times, to estimate detection probability differences between the epipelagic (0-200m), uppermeso pelagic (200-600m), and lower mesopelagic (600-1200m). Detection probability was likely to differ between these regions due to differences in UVP descent speed and thus sampling volume through the water column as described in Barth&Stone(2022) \n\\[\nY_{ij,db,tod} \\sim Bernoilli(p_{ij,tod}*z_{i,db,tod})\n\\]\n\\[\nz_{i,db,tod} \\sim Binomial(\\psi_{db,tod})\n\\]\n\\[\nlogit(p_{ij,tod}) \\sim a_0 + a_{vs,tod} * vs_{ij}\n\\] The model was ran using JAGS with the r package jagsUI. Vague priors were assumed for all parameters. A \\(Beta(1,1)\\) distribution was used as the prior for fixed values (\\(a_0\\), \\(\\psi\\)), while a weak normal prior (mean = 0, sd = 1/10) was used as the prior for slope parameters (\\(a_{vs}\\)). The algorithm was ran with 3 chains for 10,000 iterations and a thinning rate of 2. All data used to inform the parameters (volume sampled) were standardized prior to inclusion. To visualize the effect of volume sampled on the detection probability, the posterior distribution for \\(a_{vs}\\) in each model was multiples by range of values from 0 - 1050L, which was the range of actual volume sampled by the UVP in a 20m depth bin, with an average sampling volume of 526.2L. The occupancy results from this model can be seen in Supplemental Information 4"
  },
  {
    "objectID": "main_05_all-copepod-occupancy.html#key-figures-and-take-aways",
    "href": "main_05_all-copepod-occupancy.html#key-figures-and-take-aways",
    "title": "Copepod Occupancy Model - General Detection Probability",
    "section": "Key Figures and Take Aways",
    "text": "Key Figures and Take Aways\nThe detection probability clearly increases with increasing volume sampled. This indicates that the site-occupancy model approach is useful, as it can account for the imperfect detection of organisms. It should be noted that the detection probability is very low for all regions of the water column. This is a function of the low overall abundance of copepods in the system. If the true abundance is very low, it is unlikely to capture a copepod in a given cast. Interestingly, the detection probability is much higher for nighttime, epipelagic casts. This is likely because of the increased nighttime concentrations near the surface Fig 3.\n\n\nCode\nrm(list = ls())\nlibrary(wiqid)\nlibrary(ggpubr)\nlibrary(ggplot2)\nlibrary(EcotaxaTools)\nsource('../R/tools.R')\n\n\nfull_col_mod_epi <- readRDS('../data/04_full-col-model-euphotic.rds')\nfull_col_mod_tmeso <- readRDS('../data/04_full-col-model-top-meso.rds')\nfull_col_mod_bmeso <- readRDS('../data/04_full-col-model-bot-meso.rds')\ncount_data <- readRDS('../data/04_count_data.rds')\n####\n# Detection Probability ########\n####\n\n# |- Volume Sampled Slope ----------\n\n# vs range 2.2 to 1288.1\nvs_range <- seq(0,1050, length = 100)\nvs_rangeS <- standardize2match(vs_range, count_data$vol_sampled)\n\nvol_range_sims <- function(tod, model) {\n  \n\n  out_data <- data.frame(\n    mean = rep(NA, length(vs_range)),\n    low = rep(NA, length(vs_range)),\n    high = rep(NA, length(vs_range)),\n    vs = vs_range\n  )\n\n  \n  for(i in 1:length(vs_range)) {\n    temp_vs <- with(model[[tod]]$sims.list,\n                    a0 + a_vs * vs_rangeS[i])\n    p_temp <- plogis(temp_vs)\n    out_data[i, 1:3] <- c(mean(p_temp), hdi(p_temp))\n  }\n  \n  return(out_data)\n}\n\nday_pred_epi <- vol_range_sims('day', full_col_mod_epi)\nnight_pred_epi <- vol_range_sims('night', full_col_mod_epi)\n\n# |- Epipelagic Plot --------------------------------------\nepi_vs_plot <- ggplot() + \n  geom_line(data = day_pred_epi,\n            aes(x = vs, y = mean,\n                col = 'day')) +\n  geom_ribbon(data = day_pred_epi,\n              aes(x = vs, ymin = low, ymax = high,\n                  fill = 'day'), alpha = .25) + \n  geom_line(data = night_pred_epi,\n            aes(x = vs, y = mean, col = 'night')) +\n  geom_ribbon(data = night_pred_epi,\n              aes(x = vs, ymin = low, ymax = high,\n                  fill = 'night'), alpha = .25)+\n  scale_fill_manual(values = dn_cols[c('day','night')]) + \n  scale_color_manual(values = dn_cols[c('day','night')]) +\n  scale_y_continuous(limits = c(0,1)) +\n  labs(y = 'Detection Probability', x = 'Volume Sampled', fill = \"\") +\n  guides(color = 'none')+\n  theme_pubr()\n  \n\n\n\n\n# |- tmesopelagic Plot --------------------------------------\nday_pred_tmeso <- vol_range_sims('day', full_col_mod_tmeso)\nnight_pred_tmeso <- vol_range_sims('night', full_col_mod_tmeso)\n\n\ntmeso_vs_plot <- ggplot() + \n  geom_line(data = day_pred_tmeso,\n            aes(x = vs, y = mean,\n                col = 'day')) +\n  geom_ribbon(data = day_pred_tmeso,\n              aes(x = vs, ymin = low, ymax = high,\n                  fill = 'day'), alpha = .25) + \n  geom_line(data = night_pred_tmeso,\n            aes(x = vs, y = mean, col = 'night')) +\n  geom_ribbon(data = night_pred_tmeso,\n              aes(x = vs, ymin = low, ymax = high,\n                  fill = 'night'), alpha = .25)+\n  scale_fill_manual(values = dn_cols[c('day','night')]) + \n  scale_color_manual(values = dn_cols[c('day','night')]) +\n  scale_y_continuous(limits = c(0,1)) +\n  labs(y = '', x = 'Volume Sampled', fill = \"\") +\n  guides(color = 'none')+\n  theme_pubr()\n\n\n# |- Bot Mesopelagic Plot --------------------------------------------\n\nday_pred_bmeso <- vol_range_sims('day', full_col_mod_bmeso)\nnight_pred_bmeso <- vol_range_sims('night', full_col_mod_bmeso)\n\n\nbmeso_vs_plot <- ggplot() + \n  geom_line(data = day_pred_bmeso,\n            aes(x = vs, y = mean,\n                col = 'day')) +\n  geom_ribbon(data = day_pred_bmeso,\n              aes(x = vs, ymin = low, ymax = high,\n                  fill = 'day'), alpha = .25) + \n  geom_line(data = night_pred_bmeso,\n            aes(x = vs, y = mean, col = 'night')) +\n  geom_ribbon(data = night_pred_bmeso,\n              aes(x = vs, ymin = low, ymax = high,\n                  fill = 'night'), alpha = .25)+\n  scale_fill_manual(values = dn_cols[c('day','night')]) + \n  scale_color_manual(values = dn_cols[c('day','night')]) +\n  scale_y_continuous(limits = c(0,1)) +\n  labs(y = '', x = 'Volume Sampled', fill = \"\") +\n  guides(color = 'none')+\n  theme_pubr()\n\nggarrange(epi_vs_plot, tmeso_vs_plot, bmeso_vs_plot,\n          nrow = 1, common.legend = T, \n          labels = c('Epipelagic','Upper Meso','Lower Meso'),\n          hjust = -0.75)"
  },
  {
    "objectID": "main_06_cluster-occurence.html",
    "href": "main_06_cluster-occurence.html",
    "title": "Morphogroup Occupancy Model",
    "section": "",
    "text": "Key Figures and Takeaways:\n\n\nCode\nrm(list = ls())\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(wiqid)\nlibrary(EcotaxaTools)\nsource('../R/tools.R')\n\n\ndb <- readRDS('../data/05_db-list.rds')\nepi_mod_output <- readRDS('../data/05_cluster-occ-mod-epi.rds')\ntmeso_mod_output <- readRDS('../data/05_cluster-occ-mod-tmeso.rds')\nbmeso_mod_output <- readRDS('../data/05_cluster-occ-mod-bmeso.rds')\n\n\n# |- Extact credible intervals from models -------------\n\npsi_extract <- function(model, tod, min_d, max_d, db = db) {\n  db_length <- ncol(model[[tod]]$sims.list$psi)\n  \n  out_df <- data.frame(\n    db = db_decode(c(1:db_length), tod, min_d, max_d, db = db),\n    mean = rep(NA, db_length),\n    low = rep(NA, db_length),\n    high = rep(NA, db_length)\n  )\n  \n  for(i in 1:db_length) {\n    out_df[i,-1] <- c(mean(model[[tod]]$sims.list$psi[,i]),\n                      hdi(model[[tod]]$sims.list$psi[,i]))\n  }\n  return(out_df)\n}\n\n\nocc_pred <- vector('list', 4)\nfor(i in 1:4) {\n  for(tod in c('day', 'night')) {\n    occ_pred[[i]][[tod]] <- do.call(rbind,list(\n      psi_extract(epi_mod_output[[i]],\n                  tod, 0, 200,\n                  db = db[[i]]),\n      psi_extract(tmeso_mod_output[[i]],\n                  tod, 200, 600,\n                  db = db[[i]]),\n      psi_extract(bmeso_mod_output[[i]],\n                  tod, 600, 1200,\n                  db = db[[i]]))) |> \n      bin_format()\n  }\n}\n\nnames(occ_pred) <- c(1:4)\nocc_pred <- occ_pred |> \n  lapply(list_to_tib, 'tod') |> \n  list_to_tib('cluster')\n\n\n###\n# Plotting ######\n###\nribbon_plot <- function(cluster) {\n  plot_data <- occ_pred[occ_pred$cluster == cluster,]\n  \n  out_plot <- ggplot(plot_data) +\n    geom_ribbon(aes(x = mp,\n                        y = mean,\n                        ymin = low,\n                        ymax = high,\n                        fill = tod,\n                    color = tod),\n                alpha = 0.5) +\n    geom_line(aes(x = mp,\n                  y = mean,\n                  color = tod),\n              linewidth = 1,\n              alpha = .75) +\n    facet_wrap(~tod)+\n    scale_x_reverse() +\n    scale_fill_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n    scale_color_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n    coord_flip()+\n    theme_pubr() +\n    labs(x = 'Depth [m]', y = \"Occupancy\") +\n    theme(legend.position = 'none',\n          axis.text.x = element_text(angle=45, hjust = 1, vjust = 1))\n  return(out_plot)\n}\n\n# point_plot <- function(cluster) {\n#   plot_data <- occ_pred[occ_pred$cluster == cluster,]\n#   \n#   out_plot <- ggplot(plot_data) +\n#     geom_pointrange(aes(x = mp,\n#                         y = mean,\n#                         ymin = low,\n#                         ymax = high,\n#                         color = tod),\n#                     position = position_dodge(width = 5)) +\n#     scale_x_reverse() +\n#     scale_fill_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n#     scale_color_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n#     coord_flip()+\n#     theme_pubr() +\n#     labs(x = 'Depth [m]', y = \"Occupancy\") +\n#     theme(legend.position = 'none')\n#   return(out_plot)\n# }\n\nribbon_occupancy <- vector('list',4)\n# point_occupancy <- vector('list', 4)\nfor(i in 1:4) {\n  ribbon_occupancy[[i]] <- ribbon_plot(i)\n  # point_occupancy[[i]] <- point_plot(i)\n}\n\n#| column: page-outset\n\nggarrange(ribbon_occupancy[[1]],\n          ribbon_occupancy[[2]] + theme(axis.title.y = element_blank(),\n                                        axis.text.y = element_blank()),\n          ribbon_occupancy[[3]] + theme(axis.title.y = element_blank(),\n                                        axis.text.y = element_blank()),\n          ribbon_occupancy[[4]] + theme(axis.title.y = element_blank(),\n                                        axis.text.y = element_blank()),\n          ncol = 4)\n\n\n\n\n\nCode\n# ggarrange(point_occupancy[[1]],\n#           point_occupancy[[2]] + theme(axis.title.y = element_blank()),\n#           point_occupancy[[3]] + theme(axis.title.y = element_blank()),\n#           point_occupancy[[4]] + theme(axis.title.y = element_blank()),\n#           ncol = 4)\n\n\nGenerally, across all morphogroups, it can be seen that the credible intervals (95% high density interval of the posterior distribution) for copepod occupancy are very wide. Often ranging from 25% to 100%. However, there are some clear trends consistent with DVM hypotheses. Notably, there is an increased nighttime occupancy for all morphogroups from the 40m to 140m. For depth bins in those regions, the mean posterior occupancy ranged from 71% to 88%, indicating there is a high likelihood all morphogroups will be found in that region at night. There is lower daytime occupancy over that same region, however this varies by morphogroup. Notably, morphogroup 4 has a 54% mean posterior daytime occupancy from 40m-140m. This indicates a decreased likely of the larger morphogroup 4 copepods in that area during daytime. All other morphogroups have higher posterior daytime occupancy rates in the epipelagic. Generally throughout the rest of the water column, the posterior estimates of occupancy are consistent, except for a decline around 225-300m which is consistent with the abundance profiles. Overall, morphogroup 4 had a wider credible interval around the posterior occupancy estimate which is likely due to it’s rarity.\nA possilbe reason for the wide range of occupancy variables is the fact we have yet to account for environmental influences on occupancy across different cruises (sites). This is investigated in Figure 7\nThe full occupancy credible intervals for each morphotype and depthbin can be seen below:\n\n\nCode\nlibrary(DT)\nlibrary(dplyr)\n\nocc_pred |> \n  select(DepthBin = db, BinMidPoint = mp,\n         lowerCI = low, meanPsi = mean, upperCI = high, TimeOfDay = tod, \n         MorphoGroup = cluster) |> \n  datatable(filter = 'top')"
  },
  {
    "objectID": "main_07_environmental-effect-model.html",
    "href": "main_07_environmental-effect-model.html",
    "title": "Environmental Influences on Morphogroup Occupancy",
    "section": "",
    "text": "To assess how environmental variations by cruise influenced water column day/night occupancy, several relevant metrics were included. First, we included depth of the the chlorophyll-a maximum (\\(dcm\\_d\\)) which should have a positive effect on occupancy in near-by depth-bins. \\(dmc\\_d\\) was calculated using fluorometry data from the CTD aboard the R/V Atlantic Explorer. Next, the integrated small (<450\\(\\mu\\)m) particle abundance from 0m-250m was calculated from UVP casts. The small particle abundance has been shown as a useful proxy for prey availability, with implications for DVM (Gastauer et al. 2022). In this study system, if the average particle abundance was higher near the surface, it hypothetically should have a positive impact on occupancy near the surface as it is more beneficial for an individual copepod to be there. Additionally, two metrics for light were included in the model, photosynthetically available radiation (\\(par\\)) and the diffuse attenuation coefficient (\\(1/k_{490}\\)). An increase in light availability should decrease the near-surface daytime occupancy. These four environmental parameters were modelling with a logistic regression to determine their effect on the occurrence probability, or occupancy \\(\\psi\\) These environmental variables were included in a site-occupancy model for each morphogroup. Three separate models were ran in the epipelagic, upper mesopelagic, and lower mesopelagic to account for variability in detection probability. The models were ran for each depth-bin and time of day. The full model is described below:\nSimilar vague prior were used for all parameters described above. Additionally, weak normal priors (mean = 0, sd = 1/10) were used for all environmental slope variables and a \\(Beta(1,1)\\) prior was used for the intercept \\(\\beta_0\\)\n\\[\nY_{ij,db,tod,mg} \\sim Bernoilli(p_{ij,tod,mg}*z_{i,db,tod,mg})\n\\]\n\\[\nz_{i,db,tod,mg} \\sim Binomial(\\psi_{i,db,tod,mg})\n\\] \\[\nlogit(\\psi_{i,db,tod,mg}) \\sim \\beta_{0_{db,tod,mg}} + \\beta_{dcm\\_d_{db,tod,mg}} * dcm\\_d_i + \\beta_{prey_{db,tod,mg}} * prey_i + \\beta_{par_{db,tod,mg}} * par_i + \\beta_{\\frac{1}{k_{490}}_{db,tod,mg}} * \\frac{1}{k_{490}}_{db,tod,mg}\n\\]\n\\[\nlogit(p_{ij,tod,mg}) \\sim \\alpha_0 + \\alpha_{vs,tod,mg} * vs_{ij}\n\\]"
  },
  {
    "objectID": "main_07_environmental-effect-model.html#key-figures-and-take-aways",
    "href": "main_07_environmental-effect-model.html#key-figures-and-take-aways",
    "title": "Environmental Influences on Morphogroup Occupancy",
    "section": "Key Figures and Take Aways",
    "text": "Key Figures and Take Aways\n\n\nCode\n###\n# Plotting output for environmental output ####\n###\n\nrm(list = ls())\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(EcotaxaTools)\nlibrary(wiqid)\nsource('../R/tools.R')\n\ndb_list <- readRDS('../data/06_dblist.rds')\nepi_mod <- readRDS('../data/06_occ-model-output_epi_large.rds')\ntmeso_mod <- readRDS('../data/06_occ-model-output_tmeso_large.rds')\nbmeso_mod <- readRDS('../data/06_occ-model-output_bmeso_large.rds')\nenviron_summary <- readRDS('../data/06_enviornmental-summary.rds')\n\n\n# |- Extracting the parameters ------------------------\n\n# to make the slope interpretable as the effect of 1 unit increase of that variable\n# I need to match a value of 1 to the scaled value of the variable\n\n# conv_to_plogis <- function(x, var) {\n#   1/(1+exp(-x * standardize2match(1,var)))\n# }\n\n\n\n# function to extract the features\nfeature_extract <- function(model, tod, min_d, max_d, db) {\n  \n  b_dcm_hdi <- model[[tod]]$sims.list$b_dcm |> \n    apply(2,hdi)\n  b_dcm_mean <- model[[tod]]$sims.list$b_dcm |> \n    apply(2,mean)\n  b_prey_hdi <- model[[tod]]$sims.list$b_prey |> \n    hdi()\n  b_prey_mean <- model[[tod]]$sims.list$b_prey |> \n    apply(2,mean)\n  b_par_hdi <- model[[tod]]$sims.list$b_par |> \n    hdi()\n  b_par_mean <- model[[tod]]$sims.list$b_par |> \n    apply(2,mean)\n  b_dac_hdi <- model[[tod]]$sims.list$b_dac |> \n    hdi()\n  b_dac_mean <- model[[tod]]$sims.list$b_dac |> \n    apply(2,mean)\n  \n  db_out <- db_decode(1:length(b_dac_mean), tod, min_d, max_d, db = db)\n  \n  out_df <- data.frame(\n    db = db_out,\n    dcm_low = b_dcm_hdi[1,],\n    dcm_high = b_dcm_hdi[2,],\n    dcm = b_dcm_mean,\n    prey_low = b_prey_hdi[1,],\n    prey_high = b_prey_hdi[2,],\n    prey = b_prey_mean,\n    dac_low = b_dac_hdi[1,],\n    dac_high = b_dac_hdi[2,],\n    dac = b_dac_mean,\n    par_low = b_par_hdi[1,],\n    par_high = b_par_hdi[2,],\n    par = b_par_mean\n  )\n  \n  return(out_df |> bin_format())\n}\n\nepi_list <- vector('list',4)\ntmeso_list <- vector('list',4)\nbmeso_list <- vector('list',4)\nfor(i in 1:4) {\n  for(tod in c('day','night')) {\n    epi_list[[i]][[tod]] <- feature_extract(epi_mod[[i]], tod, 0, 200, db_list[[i]])\n    tmeso_list[[i]][[tod]] <- feature_extract(tmeso_mod[[i]], tod, 200, 600, db_list[[i]])\n    bmeso_list[[i]][[tod]] <- feature_extract(bmeso_mod[[i]], tod, 600, 1200, db_list[[i]])\n  }\n}\n\n# mash into one big data frame \n\nnames(epi_list) <- 1:4\nepi_df <- epi_list |> \n  lapply(list_to_tib,'tod') |> \n  list_to_tib('cluster')\nnames(tmeso_list) <- 1:4\ntmeso_df <- tmeso_list |> \n  lapply(list_to_tib,'tod') |> \n  list_to_tib('cluster')\nnames(bmeso_list) <- 1:4\nbmeso_df <- bmeso_list |> \n  lapply(list_to_tib,'tod') |> \n  list_to_tib('cluster')\n\nfeature_df <- do.call(rbind, list(epi_df, tmeso_df, bmeso_df))\n\n\n####\n# Plotting Effects #######\n####\n\ndcm_plot <- ggplot(feature_df) + \n  geom_ribbon(aes(x = mp,\n                  ymin = dcm_low,\n                  ymax = dcm_high,\n                  fill = tod),\n              alpha = 0.5) +\n  geom_line(aes(x = mp,\n                  y = dcm,\n                  color = tod)) +\n  geom_hline(yintercept = 0) +\n  facet_grid(~cluster+tod) +\n  scale_x_reverse() +\n  scale_fill_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n  scale_color_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n  coord_flip()+\n  theme_pubr() +\n  labs(x = 'Depth [m]', y = \"Effect on LogOdds(occupancy)\",\n       subtitle = 'DCM Depth') +\n  theme(legend.position = 'none')\n\nprey_plot <- ggplot(feature_df) + \n  geom_ribbon(aes(x = mp,\n                  ymin = prey_low,\n                  ymax = prey_high,\n                  fill = tod),\n              alpha = 0.5) +\n  geom_line(aes(x = mp,\n                y = prey,\n                color = tod)) +\n  geom_hline(yintercept = 0) +\n  facet_grid(~cluster+tod) +\n  scale_x_reverse() +\n  scale_fill_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n  scale_color_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n  coord_flip()+\n  theme_pubr() +\n  labs(x = 'Depth [m]', y = \"Effect on LogOdds(occupancy)\",\n       subtitle = 'Prey') +\n  theme(legend.position = 'none')\n\npar_plot <- ggplot(feature_df) + \n  geom_ribbon(aes(x = mp,\n                  ymin = par_low,\n                  ymax = par_high,\n                  fill = tod),\n              alpha = 0.5) +\n  geom_line(aes(x = mp,\n                y = par,\n                color = tod)) +\n  geom_hline(yintercept = 0) +\n  facet_grid(~cluster+tod) +\n  scale_x_reverse() +\n  scale_fill_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n  scale_color_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n  coord_flip()+\n  theme_pubr() +\n  labs(x = 'Depth [m]', y = \"Effect on LogOdds(occupancy)\",\n       subtitle = 'PAR') +\n  theme(legend.position = 'none')\n\ndac_plot <- ggplot(feature_df) + \n  geom_ribbon(aes(x = mp,\n                  ymin = dac_low,\n                  ymax = dac_high,\n                  fill = tod),\n              alpha = 0.5) +\n  geom_line(aes(x = mp,\n                y = dac,\n                color = tod)) +\n  geom_hline(yintercept = 0) +\n  facet_grid(~cluster+tod) +\n  scale_x_reverse() +\n  scale_fill_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n  scale_color_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n  coord_flip()+\n  theme_pubr() +\n  labs(x = 'Depth [m]', y = \"Effect on LogOdds(occupancy)\",\n       subtitle = '1/k490') +\n  theme(legend.position = 'none')\n\n\n\n#| column: page-outset\n\nggarrange(dcm_plot,\n          prey_plot+ theme(\n                           strip.background = element_blank(),\n                           strip.text = element_blank()),\n          par_plot+ theme(\n                          strip.background = element_blank(),\n                          strip.text = element_blank()),\n          dac_plot+ theme(strip.background = element_blank(),\n                          strip.text = element_blank()),\n          nrow = 4)\n\n\n\n\n\nThere was no clear effect of any of the environmental parameters on the occurrence probability for any morphogroup, in any depth-bin, in any time of day. The posterior credible intervals for the slope of each parameter on the log odds of \\(\\psi\\) typically ranged from -10 to 15. That change in log odds corresponds to an increase in occurrence probability of 0.00005% to 99% for each one unit increase of the environmental parameter, which is effectively meaningless. There are several reasons why we do not detect any influence of environmental parameters on occupancy. First, the environmental variables had to be aggregated over several days to match with the treatment of a full cruise as a “site”. It is likely that grouping all casts on a cruise together as ‘surveys’ of the same ‘site’ is too broad. While the application of site-occupancy models to imaging data shows potential, it would benefit from intentional study design. Notably, defining smaller “sites” with replicate casts at each location. The feasibility of this may be limited on ship-based studies, however recent advancements in in situ imaging allow for plankton cameras to be deployable on autonomous platforms. If platforms create multiple profiles at a single location, this technique may be of great use to characterize rare organisms. Additionally it may be that the variability of environmental parameters investigated is simply too small in this study. For example, we observed a range of \\(\\frac{1}{k_{490}}\\) between 21.5m and 47.5m. Comparatively, Ohman & Romagnan 2016 observed a range from nearly 1m to 30m - with significant implications for DVM amplitude. Thus the range of conditions may simply not be large enough to warrant large variability in DVM behavior.\nFull for the posterior distribution of all parameters can be seen here:\n\n\nCode\nlibrary(DT)\n\nfeature_df |> datatable()"
  },
  {
    "objectID": "supp_01_ctd-by-cruise.html",
    "href": "supp_01_ctd-by-cruise.html",
    "title": "CTD-interpolation across cruises",
    "section": "",
    "text": "Code\nrm(list = ls())\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(suncalc)\nlibrary(EcotaxaTools)\n\n####\n# Data loading and set up #######\n####\nplot_values <- readRDS('../data/ctd_02_interp-grid.rds')$by_cruise\n\n# |- ctd data format -------------------------------\nctd_data <- readRDS('../data/01_ctd-trim-final.rds')\n\n#mush all casts together\nall_casts <- ctd_data|> list_to_tib('ctd_orgfilename')\nall_casts <- all_casts[,-1]\n\n#trim mess from the data\nall_casts <- all_casts[-which(is.na(all_casts$Depth)),]\nall_casts <- all_casts[-which(is.na(all_casts$Sal)),]\nall_casts <- all_casts[-which(is.na(all_casts$DO)),]\nall_casts <- all_casts[-which(is.na(all_casts$RFU)),]\n\n#keep only shallow casts\nall_casts <- all_casts[which(all_casts$Depth < 1200),]\n\n# |- Time of Day ----------------------------------\n\n# set up\nall_casts$tod <- rep(NA, nrow(all_casts))\nall_casts$cruise <- paste0(all_casts$proj_id, all_casts$cruise_id)\n\nfor(i in 1:length(ctd_data)) {\n  \n  #get time\n  casttime <- ctd_data[[i]]$Date[1]\n  \n  # assign tod\n  suntimes <- getSunlightTimes(\n    date = as.Date(casttime),\n    lat = ctd_data[[i]]$Lat[1],\n    lon = ctd_data[[i]]$Lon[1],\n    tz = 'GMT'\n  )\n  \n  if(casttime < suntimes$nauticalDawn | casttime > suntimes$nauticalDusk) {\n    tod <- 'night'\n  } else if (casttime > suntimes$nauticalDawn & casttime < suntimes$nauticalDusk) {\n    tod <- 'day'\n  } else {\n    tod <- 'twilight'\n  }\n  \n  #match to mega-df\n  all_casts$tod[all_casts$ctd_orgfilename == names(ctd_data)[i]] = tod\n}\n\n\n###\n# Plotting ################\n###\n\n#save colors\nODV_colours <- c(\"#feb483\", \"#d31f2a\", \"#ffc000\", \"#27ab19\", \"#0db5e6\", \"#7139fe\", \"#d16cfa\")\n\n# set up\nvalue_class <- function(cruise){\n  ret_list <- vector('list',4)\n  names(ret_list) <- c('Sal',\"Temperature\",'RFU','DO')\n  return(ret_list)\n}\n\ncruises <- unique(names(plot_values))\nplot_list <- lapply(cruises,value_class)\nnames(plot_list) <- cruises\n\n# |- Loop out for all casts -----------------------------\nfor(i in 1:length(plot_list)) {\n  cast_df <- all_casts[all_casts$cruise == names(plot_list)[i],]\n  \n  plot_list[[i]]$Sal <- ggplot()+\n    geom_tile(data = plot_values[[i]]$Sal,\n              aes(x = Date,\n                  y = Depth,\n                  fill = Sal)) +\n    geom_vline(data = cast_df,\n               aes(xintercept = Date,\n                   color = tod),\n               size = 1) +\n    scale_y_reverse()+\n    scale_fill_distiller(palette = 'Spectral')+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"Sal [PSU]\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n  plot_list[[i]]$Temperature <- ggplot()+\n    geom_tile(data = plot_values[[i]]$Temperature,\n              aes(x = Date,\n                  y = Depth,\n                  fill = Temperature)) +\n    geom_vline(data = cast_df,\n               aes(xintercept = Date,\n                   color = tod),\n               size = 1) +\n    scale_y_reverse()+\n    scale_fill_gradientn(colors = rev(ODV_colours))+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"Temperature\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n  plot_list[[i]]$RFU <- ggplot() + \n    geom_tile(data = plot_values[[i]]$RFU,\n              aes(x = Date,\n                  y = Depth,\n                  fill = RFU)) +\n    geom_vline(data = cast_df,\n               aes(xintercept = Date,\n                   color = tod),\n               size = 1) +\n    scale_y_reverse()+\n    scale_fill_distiller(palette = 'BuGn',\n                         direction = 1)+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"RFU\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n  plot_list[[i]]$DO <- ggplot() + \n    geom_tile(data = plot_values[[i]]$DO,\n              aes(x = Date,\n                  y = Depth,\n                  fill = DO)) +\n    geom_vline(data = cast_df,\n               aes(xintercept = Date,\n                   color = tod),\n               size = 1) +\n    scale_y_reverse()+\n    scale_fill_distiller(palette = 'GnBu',\n                         direction = 1)+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"DO\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n}\n\n\n\n\nCode\nfor(i in 1:length(plot_list)) {\n  \n  outplot <- ggarrange(plot_list[[i]]$Sal + \n                         guides(color = 'none')+\n                         theme(axis.text.x = element_blank()),\n                        plot_list[[i]]$Temperature+ \n                         guides(color = 'none')+\n                         theme(axis.text = element_blank())+\n                         labs(y = \"\"),\n                        plot_list[[i]]$RFU + \n                         guides(color = 'none'),\n                        plot_list[[i]]$DO +\n                         guides(color = 'none') +\n                         theme(axis.text.y = element_blank())+\n                         labs(y = \"\"),\n                        ncol = 2, nrow = 2,\n                       align = 'hv')\n              \n  annotate_figure(outplot, top = text_grob(paste0('Cruise: ',cruises[i]))) |> print()\n}\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day."
  },
  {
    "objectID": "supp_02_pc-extended-info.html",
    "href": "supp_02_pc-extended-info.html",
    "title": "Additional PCA Information",
    "section": "",
    "text": "Additional Information related to the PCA used in this analysis are visible here. View the main conclusions from the analysis here.\nSpecific loading scores are available for each of the four dimensions:"
  },
  {
    "objectID": "supp_02_pc-extended-info.html#identifying-optimal-number-of-clusters-in-k-means-cluster",
    "href": "supp_02_pc-extended-info.html#identifying-optimal-number-of-clusters-in-k-means-cluster",
    "title": "Additional PCA Information",
    "section": "Identifying optimal number of clusters in k-means cluster",
    "text": "Identifying optimal number of clusters in k-means cluster\n4 clusters were chosen as the optimal number of clusters\n\n\nCode\n# get just the pc's we want, size and transparency\nmain_pcs <- pca_results$ind$coord[,c(1,2)]\n\n# |- Identifying the optimal clusters ----\n\ncluster_ss <- function(k, x) {\n  w <- kmeans(x, centers = k, iter.max= 100, nstart = 1000)\n  return(1 - (w$tot.withinss/w$totss))\n}\n\ncluster_curve <- c(1:10) |>  \n  sapply(cluster_ss, main_pcs) |> \n  suppressWarnings()\nplot(cluster_curve~c(1:10), type = 'b', xlab = 'Number of Clusters',ylab = 'Within SS / Total SS')\n\n\n\n\n\nCode\nprint('Explanitory power added for each new center added:')\n\n\n[1] \"Explanitory power added for each new center added:\"\n\n\nCode\nrbind(numCluster = seq(2,10,1), AddedExplain= diff(cluster_curve))\n\n\n                  [,1]      [,2]      [,3]       [,4]       [,5]       [,6]\nnumCluster   2.0000000 3.0000000 4.0000000 5.00000000 6.00000000 7.00000000\nAddedExplain 0.3401388 0.1997294 0.1043404 0.06010293 0.04319581 0.03563042\n                  [,7]       [,8]       [,9]\nnumCluster   8.0000000 9.00000000 10.0000000\nAddedExplain 0.0244299 0.02247799  0.0143087\n\n\nCode\n# Four clusters seems to be the most elbowish\n# Explains ~65% of variability, adding k is >10% variability"
  },
  {
    "objectID": "supp_03_cluster-conc.html",
    "href": "supp_03_cluster-conc.html",
    "title": "Cruise Cluster Concentration",
    "section": "",
    "text": "Shown are the integrated abundances from 0-1200m. Overall copepod abundance across all morphogroups followed similar patterns. In all months, morphogroups 1 and 2 were less abundant, which is expected for larger individuals. Generally, abundance peaked in the spring to summer and was at lower values during the fall and winter.\n\n\nCode\nrm(list = ls())\nlibrary(EcotaxaTools)\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(lubridate)\nsource('../R/tools.R')\n\nconc_data <- readRDS('../data/03_cluster-conc.rds') |> \n  lapply(bin_format) |> \n  lapply(function(x) x[which(x$max_d <= 1200),1:3]) # this is really ugly bug fix 1:3, need to fix in package\n  \nuvp_data_meta <- readRDS('../data/01_uvp-trim-final_large.rds')$meta\nuvp_data_meta$cruise_id <- paste0(uvp_data_meta$stationid,\n                                  uvp_data_meta$programid)\n\nuvp_data_meta$dateabv <- paste(year(uvp_data_meta$sampledate),\n                               month(uvp_data_meta$sampledate),\n                               '01', sep = '-') |> \n  as.Date()\n\ncruise_casts <- vector('list', length(unique(uvp_data_meta$dateabv)))\nnames(cruise_casts) <- unique(uvp_data_meta$dateabv)\nfor(i in 1:length(cruise_casts)) {\n  cruise_casts[[i]] <- uvp_data_meta$profileid[which(uvp_data_meta$dateabv == names(cruise_casts)[i])]\n}\n\navg_conc <- conc_data |> \n  average_casts(cruise_casts) |> \n  lapply(integrate_all, need_format = T, subdivisions = 1000) |> \n  lapply(intg_to_tib) |> \n  list_to_tib('date')\n\n\navg_conc$date <- avg_conc$date |> as.Date()\n\nintg_plot_early <- ggplot(avg_conc[year(avg_conc$date) < 2020,]) +\n  geom_bar(aes(x = date,\n               y = intg,\n               fill = taxa),\n           stat = 'identity',\n           position = 'dodge') +\n  scale_fill_manual(values = gg_cbb_col(4)) +\n  scale_x_date(date_labels = '%Y-%m',\n               date_breaks = '1 month') +\n  scale_y_continuous(limits = c(0,750), expand = c(0,0)) +\n  labs(x = \"\", y = 'Integrated Abundance [indv./m^2]', fill = \"Morphogroup\") + \n  theme_pubr() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\n\nintg_plot <- ggplot(avg_conc[year(avg_conc$date) >= 2020,]) +\n  geom_bar(aes(x = date,\n               y = intg,\n               fill = taxa),\n           stat = 'identity',\n           position = 'dodge') +\n  scale_fill_manual(values = gg_cbb_col(4)) +\n  scale_x_date(date_labels = '%Y-%m',\n               date_breaks = '1 month') +\n  scale_y_continuous(limits = c(0,750), expand = c(0,0)) +\n  labs(x = \"\", y = 'Integrated Abundance [indv./m^2]', fill = \"Morphogroup\") + \n  theme_pubr() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\n\nggarrange(intg_plot_early,\n          intg_plot + theme(axis.title.y = element_blank(),\n                            axis.text.y = element_blank(),\n                            axis.line.y = element_blank(),\n                            axis.ticks.y = element_blank()),\n          common.legend = TRUE,\n          widths = c(0.25,.75),\n          nrow = 1)"
  },
  {
    "objectID": "supp_04_all-copepod-occurrence.html",
    "href": "supp_04_all-copepod-occurrence.html",
    "title": "Migrator Morphology",
    "section": "",
    "text": "It is clear that copepods have a slightly higher average occupancy in the nighttime epipelagic compared to the daytime. Additionally, there is a decreased occupancy for both times of day around 250m-300m. These findings are consistent with the average concentration profiles.\n\n\nCode\nrm(list = ls())\nlibrary(wiqid)\nlibrary(ggpubr)\nlibrary(ggplot2)\nlibrary(EcotaxaTools)\nsource('../R/tools.R')\n\n\nfull_col_mod_epi <- readRDS('../data/04_full-col-model-euphotic.rds')\nfull_col_mod_tmeso <- readRDS('../data/04_full-col-model-top-meso.rds')\nfull_col_mod_bmeso <- readRDS('../data/04_full-col-model-bot-meso.rds')\ncount_data <- readRDS('../data/04_count_data.rds')\n\n\n###\n# Occurrence Probability #####\n###\n\n# |- Model Extraction ------------------\n\npsi_extract <- function(model, tod, min_d, max_d) {\n  db_length <- ncol(model[[tod]]$sims.list$psi)\n  \n  out_df <- data.frame(\n    db = db_decode(c(1:db_length), tod, min_d, max_d, db = model$db),\n    mean = rep(NA, db_length),\n    low = rep(NA, db_length),\n    high = rep(NA, db_length)\n  )\n  \n  for(i in 1:db_length) {\n    out_df[i,-1] <- c(mean(model[[tod]]$sims.list$psi[,i]),\n                      hdi(model[[tod]]$sims.list$psi[,i]))\n  }\n  return(out_df)\n}\n\n\n\nday_psi <- do.call(rbind, list(\n  psi_extract(full_col_mod_epi, 'day', 0, 200),\n  psi_extract(full_col_mod_tmeso, 'day', 200, 600),\n  psi_extract(full_col_mod_bmeso, 'day', 600, 1200)\n)) |> \n  bin_format()\n\n\nnight_psi <- do.call(rbind, list(\n  psi_extract(full_col_mod_epi, 'night', 0, 200),\n  psi_extract(full_col_mod_tmeso, 'night', 200, 600),\n  psi_extract(full_col_mod_bmeso, 'night', 600, 1200)\n)) |> \n  bin_format()\n\nday_psi$tod <- 'day'\nnight_psi$tod <- 'night'\n\npsi_df <- rbind(day_psi, night_psi)\n\n# |- Occurrence plot ---------------------\n\nggplot(psi_df) + \n  geom_pointrange(aes(y = mp,\n                      x = mean,\n                      xmin = low,\n                      xmax = high,\n                      color = tod)) +\n  facet_grid(~tod) +\n  scale_y_reverse() +\n  scale_color_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n  theme_pubr() +\n  theme(legend.position = 'none')"
  }
]