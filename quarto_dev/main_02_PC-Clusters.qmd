---
title: 'Morphogroup Definition'
---

```{r}
rm(list = ls())
library(DT)
library(EcotaxaTools)
library(ggplot2)
library(ggpubr)
source('../R/tools.R')

pca_results <- readRDS('../data/02_cope-pca-res.rds')
cluster_res <- readRDS('../data/02_cluster-copepods.rds')
```

A PCA was run on the morphological features for each vignette. Principle components with eigenvalues greater than 1 were considered. This comprised the first four PCs, which explained a total of 87.9% of the variance in the data (view the complete PCA results check [supplemental information 2](./supp_02_pc-extended-info.html). The first two components explained 34.23% and 27.24% respectively. The first principle component was largely correlated with metrics associated with size (perimeter, feret diameter, fractal dimension, major axis). The second principle component is best described by darkness, where positive values indicate more transparent organisms and negative values are darker ones. Similar to Vilgraine et al. (2020), we observe the third PC to be best described by orientation and the fourth axis to be described by appendage visibility. \n\n It can be assumed that the orientation and appendage visibility of copepods are artefacts of the imaging method and not indicative of their ecology/behavior. For this reason, we chose to only include the first two axis for definition of morphogroups. A k-means cluster analysis was used to identify morphogroups within the first two PC-space. Four clusters were determined to be the optimal number of groups as it captured 65% of the variability in the morphospace and additional clusters added less than 10% explanatory power. Individual observations were assigned to morphogroups based on the k-means analysis, which was conducted using 1000 random starts. The analysis converged on consistent results across iterations.\n\n

```{r, fig.width=7, fig.height=7, out.width='100%', out.height='100%'}

# |- make a circle for plotting variable contributions -------------------
curl <- seq(-pi,pi, length = 50)
circ <- data.frame(x = sin(curl), y = cos(curl))

# |- Extract variable contributions ----------------------------
pc_df <- data.frame(
  pc1 = pca_results$var$coord[,1],
  pc2 = pca_results$var$coord[,2],
  pc3 = pca_results$var$coord[,3],
  pc4 = pca_results$var$coord[,4],
  vars = row.names(pca_results$var$coord)
)

# Trim the pcs to only have those with 

pc1_pc2 <- ggplot() +
  geom_path(data = circ,aes(x,y), lty = 2, color = "grey", alpha = 0.7) +
  geom_text(data = pc_df, aes(x = pc1, y = pc2, label = vars),
            position = position_jitter()) +
  geom_segment(data = pc_df,
               aes(x = 0, y = 0, xend = pc1*0.9, yend = pc2*0.9),
               arrow = arrow(length = unit(1/2, 'picas')), color = "grey30") +
  labs(x = 'PC1',y = 'PC2')+
  theme_pubclean()+
  theme(panel.border = element_rect(fill = 'transparent'))
  

cluster_pc_plot <- ggplot(cluster_res)+
  geom_point(aes(x = PC1,
                 y = PC2,
                 col = as.factor(cluster),
                 shape = as.factor(cluster)),
             size = 1.5) +
  theme_pubclean()+
  scale_color_manual(values = gg_cbb_col(4))+
  theme(panel.border = element_rect('transparent'),
        legend.position = 'right',
        legend.title = element_blank(),
        panel.background = element_blank(),
        panel.grid = element_blank())

ggarrange(cluster_pc_plot, pc1_pc2)


# To generate figure plot:
# ggplot()+
#   geom_point(data = cluster_res, aes(x = PC1*.1,
#                                      y = PC2*.1,
#                                      col = as.factor(cluster),
#                                      shape = as.factor(cluster)),
#              size = 1.5) +
#   geom_hline(yintercept = 0, color = 'black', size =1, linetype = 'dotted')+
#   geom_vline(xintercept = 0, color = 'black', size =1, linetype = 'dotted')+
#   theme_pubclean()+
#   scale_color_manual(values = gg_cbb_col(4))+
#   geom_text(data = pc_df, aes(x = pc1, y = pc2, label = vars),
#             position = position_jitter(), color = 'red') +
#   geom_segment(data = pc_df,
#                aes(x = 0, y = 0, xend = pc1*.9, yend = pc2*.9),
#                arrow = arrow(length = unit(1/2, 'picas')), color = "red") +
#   labs(x = 'PC1',y = 'PC2', color='Morphogroup', shape= 'Morphogroup')+
#   theme_pubr()+
#   theme(legend.position = 'right',
#         axis.line = element_blank(),
#         panel.background = element_blank(),
#         panel.grid = element_blank(),
#         axis.text = element_blank(),
#         axis.ticks = element_blank())

```


\n\n

## Morphogroup definition separation

The morphogroups defined by clustering in the PC-morphology space do not lend themselves to clear groupings. However, by inspecting the groups in the context of the morphospace, it can determined the characteristics best used to describe each group. Visually, it was determined that Cluster 1 can best be described by larger and more transparent copepods. Cluster 2 follows large values of PC1 and low values of PC2, which can be interpreted as containing both large-sized and darker copepods. Cluster 3 was best described by low values of PC1, interpreted as correlating to smaller-sized individuals. Finally, cluster 4 contains individuals with moderate PC1 scores and low PC2 scores, indicating darker, medium-to-small sized copepods.

To assure that these clusters were not trivial, each morphogroup's scores on PC1 and PC2 were compared with pairwise Dunn tests. It was revealed that all groups were significantly different from one another along PC1 (p < 0.001 following Bonferroni correction for all groups, Supplemental 2). On PC2, cluster 2 and cluster 4 were not significantly different (p = 1), while all other groups were significantly different from one another (p < 0.001). 


```{r, fig.width=7, fig.height=7, out.width='100%', out.height='100%'}
FSA::dunnTest(PC1 ~ as.factor(cluster),
              data = cluster_res,
              method = 'bonferroni')$res |> 
  datatable(caption = 'PC1 Dunn multiple comprison test with bonferroni correction')

pc1_dist <- ggplot(cluster_res) +
  geom_boxplot(aes(x = as.factor(cluster),
                   y = PC1,
                   fill = as.factor(cluster))) +
  scale_fill_manual(values = gg_cbb_col(4))+
  labs(x = "Morphogroup", y = 'PC1 - Size: Small-to-Large') + 
  theme_pubr() +
  theme(legend.position = 'none')


FSA::dunnTest(PC2 ~ as.factor(cluster),
              data = cluster_res,
              method = 'bonferroni')$res |> 
  datatable(caption = 'PC2 Dunn multiple comprison test with bonferroni correction')

pc2_dist <- ggplot(cluster_res) +
  geom_boxplot(aes(x = as.factor(cluster),
                   y = PC2,
                   fill = as.factor(cluster))) +
  scale_fill_manual(values = gg_cbb_col(4))+
  labs(x = "Morphogroup", y = 'PC2 - Trans: dark-to-light') + 
  theme_pubr()+
  theme(legend.position = 'none')

ggarrange(pc1_dist, pc2_dist, nrow=1)

```


Additionally, to exemplify morphogroup differences along original parameters, we plotted the distribution of individual metrics for key morphological parameters representing size and transparency. This clearly shows that morphogroups 1 & 2 are larger while 3 & 4 are smaller. Additionally morphogroups 2 & 4 are darker while 1 & 3 are smaller. Thus, the hypothesis that size and color will influence DVM signal would predict morphogroup 2 to have the largest DVM signal and morphogroup 3 to have the smallest DVM signal.

```{r, fig.width=7, fig.height=7, out.width='100%', out.height='100%'}

uvp_data <- readRDS('../data/01_uvp-trim-final.rds') |> 
  trim_to_cope()

####
# Assign Clusters to individuals ########
####

for(i in 1:length(uvp_data$zoo_files)) {
  idx <- which(cluster_res$orig_id %in% uvp_data$zoo_files[[i]]$orig_id)
  uvp_data$zoo_files[[i]]$cluster <- cluster_res$cluster[idx]
}

all_copes <- uvp_data$zoo_files |> 
  list_to_tib('profileid')

# convert to mm
all_copes$feret <- all_copes$feret * unique(uvp_data$meta$acq_pixel)

feret_plot <- ggplot(all_copes) + 
  geom_boxplot(aes(x = as.factor(cluster),
                   y = feret,
                   fill = as.factor(cluster))) +  scale_fill_manual(values = gg_cbb_col(4))+
  labs(x = "Morphogroup", y = 'Feret Diam [mm]') + 
  theme_pubr()+
  theme(legend.position = 'none')

meanGrey_plot <- ggplot(all_copes) + 
  geom_boxplot(aes(x = as.factor(cluster),
                   y = mean,
                   fill = as.factor(cluster))) +  scale_fill_manual(values = gg_cbb_col(4))+
  labs(x = "Morphogroup", y = 'Mean Grey Value') + 
  theme_pubr()+
  theme(legend.position = 'none')

ggarrange(feret_plot, meanGrey_plot, rnow = 1)

```

