---
title: Vertical Distribution of Morphotypes
---

## Methodology:

To understand the vertical distribution of the different morphogroups, the concentration of each cluster was calculated in a 20m-bin then averaged across all profiles in the study (following the average-cast method described in [Barth & Stone 2022](https://thealexbarth.github.io/Oligotrophic_in-situ_net_comparison/main_analysis_03.html). Using the average-cast approach is beneficial as it allows for data to be included from casts with different max descents, so long as an entire 20m depth bin was sampled, it is included.Averages were calculated separately for daytime and nighttime casts.

\n\n

Then to better visualize day/night differences, the proportional difference in each depth bin was calculated. For each $i^{th}$ depth bin in all $N$ bins, $PropDiff_{i} = \frac{Night_{i} - Day_i}{\sum_{i}^N{Night_i+Day_i}}$. This technique shows how much more a nighttime abundance is compared to the daytime relative to the total, average concentration of the morphogroup. Thus, morphogroup proportional differences can be compared to see overall trends in diel patterns across the water column. However, it is important to note that this method does not directly evaluate any magnitude of DVM.

## Figures & Take-aways:

First, it is clear the smaller-sized morphogroups (3 & 4) are in higher average abundances in all areas of the water column. This is again expected as smaller zooplankton dominate in this system. For all morphogroups, nighttime abundances are higher in the surface (0-200m) compared to the daytime surface abundances. Overall abundances are lowest around 300m with a daytime abundance dominated region around the upper-to-mid mesopelagic (400-600m). This pattern shows a clear DVM occurring in all morphogroups between around 150m-600m. Below 600m, there is no trend in day/night differences and the variation in proportional differences seems to be random noise. This is expected as it would be nearly impossible for regular migrations of individual copepods to move below 600m on a daily basis.\n\n
It is also clear that the variability between casts is extremely large. Often the standard deviation of depth-bin abundance is much larger than the average abundance. This is in part driven by high variability between [cruises which occurred in different seasons](./supp_03_cluster-conc.html) getting averaged together. However, there is also large variability between individual casts, which can be driven by the small sampling volume of the UVP as described by [Barth & Stone 2022](https://www.frontiersin.org/articles/10.3389/fmars.2022.898057/full). This variation driven by the sampling variability led to the need for new analysis methods on in-situ imaging data [used in this paper](./main_05_all-copepod-occupancy.html).

```{r}

####
# Get project-wide night-day differences #######
####

rm(list = ls())
library(EcotaxaTools)
library(ggplot2)
library(ggpubr)
source('../R/tools.R')

cluster_cope <- readRDS('../data/03_cluster-conc.rds')
uvp_data  <- readRDS('../data/01_uvp-trim-final.rds') |> trim_to_cope()

cast_times <- list(day = uvp_data$meta$profileid[which(uvp_data$meta$tod == 'day')],
                   night = uvp_data$meta$profileid[which(uvp_data$meta$tod == 'night')])

avg_cope <- cluster_cope |> 
  average_casts(cast_times) |> 
  lapply(bin_format)


###
# Create cluster profiles ####
###

# |- Area Profile ----------------------------------------------------
# profile_plot <- ggplot() +
#   geom_area(data = avg_cope$day,
#             aes(x = mp, y = -mean, fill = as.factor(group))) +
#   geom_area(data = avg_cope$night,
#             aes(x = mp, y = mean, fill = as.factor(group)))+
#   geom_hline(yintercept = 0)+
#   coord_flip()+
#   scale_x_reverse(expand = c(0,0))+
#   scale_y_continuous(breaks = c(-2:2),
#                      labels = abs(-2:2),
#                      expand = c(0,0))+
#   labs(x = "Depth [m]",
#        y = "Concentration",
#        fill = 'Cluster')+
#   scale_fill_manual(values = gg_cbb_col(4))+
#   theme_pubr()

# |- Concentration Profile --------------------------------------------

cluster_profile <- function(k) {
  ret_plot <- ggplot()+
    geom_rect(data = avg_cope$day[avg_cope$day$group == k,],
              aes(xmin = min_d, xmax = max_d,
                  ymin = 0, ymax = -mean),
              fill = dn_cols['day']) +
    geom_errorbar(data = avg_cope$day[avg_cope$day$group == k,],
                  aes(x = mp, ymin = -mean, ymax = -(mean+sd)),
                  alpha = .25) +
    geom_rect(data = avg_cope$night[avg_cope$night$group == k,],
              aes(xmin = min_d, xmax = max_d,
                  ymin = 0, ymax = mean),
              fill = dn_cols['night']) +
    geom_errorbar(data = avg_cope$night[avg_cope$night$group == k,],
                  aes(x = mp, ymin = mean, ymax = (mean+sd)),
                  alpha = .25)+
    labs(x = 'Depth [m]', y = 'Concentration [indv./m3]')+
    coord_flip()+
    scale_x_reverse(expand = c(0,0))+
    scale_y_continuous(position = 'right',
                       labels = abs) +
    theme_pubr()

  return(ret_plot)
}

cluster_1_profile <- cluster_profile(1)
cluster_2_profile <- cluster_profile(2)
cluster_3_profile <- cluster_profile(3)
cluster_4_profile <- cluster_profile(4)

# |- Proportional Difference ----------------------------------------

# calculate the proportional difference between night and day profiles
# this approach calculates the bin-specific night-day difference
# 

diff_profile <- function(k) {
  ni_conc <- avg_cope$night$mean[which(avg_cope$night$group == k)]
  day_conc <- avg_cope$day$mean[which(avg_cope$day$group == k)]
  
  diel_diff <- (ni_conc - day_conc) / sum(c(ni_conc, day_conc))
  
  mp <- avg_cope$night$mp[which(avg_cope$night$group == k)]
  
  ret_plot <- ggplot() + 
    geom_point(aes(x = mp, y = diel_diff),
               size = 1.5, color = 'black')+
    geom_line(aes(x = mp, y=diel_diff)) +
    labs(x = 'Depth [m]', y = 'Proportional Difference') +
    geom_hline(yintercept = 0) +
    coord_flip()+
    scale_x_reverse(expand = c(0,0)) +
    scale_y_continuous(expand = c(0,0),
                       position = 'right',
                       labels = abs) +
    theme_pubr()
  
  return(ret_plot)
}

diff_1_profile <- diff_profile(1)
diff_2_profile <- diff_profile(2)
diff_3_profile <- diff_profile(3)
diff_4_profile <- diff_profile(4)
```



```{r, out.width='100%', fig.width=10}

#| column: page-inset

ggarrange(cluster_1_profile,
          cluster_2_profile + 
            theme(axis.text.y = element_blank(),
                  axis.title.y = element_blank()),
          cluster_3_profile + 
            theme(axis.text.y = element_blank(),
                  axis.title.y = element_blank()),
          cluster_4_profile + 
            theme(axis.text.y = element_blank(),
                  axis.title.y = element_blank()),
          diff_1_profile,
          diff_2_profile + 
            theme(axis.text.y = element_blank(),
                  axis.title.y = element_blank()),
          diff_3_profile + 
            theme(axis.text.y = element_blank(),
                  axis.title.y = element_blank()),
          diff_4_profile + 
            theme(axis.text.y = element_blank(),
                  axis.title.y = element_blank()),
          nrow = 2, ncol = 4,
          widths = c(1,.9,.9,.9))
```


We can zoom in on the upper 600m to get a better picture of the changes in the upper layers.

```{r, out.width='100%', fig.width = 10}

#| column: screen-inset

ggarrange(cluster_1_profile +
            xlim(600,0),
          cluster_2_profile + 
            theme(axis.text.y = element_blank(),
                  axis.title.y = element_blank()) +
            xlim(600,0),
          cluster_3_profile + 
            theme(axis.text.y = element_blank(),
                  axis.title.y = element_blank()) +
            xlim(600,0),
          cluster_4_profile + 
            theme(axis.text.y = element_blank(),
                  axis.title.y = element_blank()) +
            xlim(600,0),
          diff_1_profile +
            xlim(600,0),
          diff_2_profile + 
            theme(axis.text.y = element_blank(),
                  axis.title.y = element_blank()) +
            xlim(600,0),
          diff_3_profile + 
            theme(axis.text.y = element_blank(),
                  axis.title.y = element_blank()) +
            xlim(600,0),
          diff_4_profile + 
            theme(axis.text.y = element_blank(),
                  axis.title.y = element_blank()) +
            xlim(600,0),
          nrow = 2, ncol = 4,
          widths = c(1,.9,.9,.9))
```