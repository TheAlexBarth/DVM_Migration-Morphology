[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Migrator Morphology",
    "section": "",
    "text": "Here, I investigate how diel vertical migration varies between copepods based on morphotypes determined from in-situ imaging."
  },
  {
    "objectID": "main_00_CTD-UVP-map.html",
    "href": "main_00_CTD-UVP-map.html",
    "title": "CTD & UVP cast locations",
    "section": "",
    "text": "Code\nrm(list = ls())\nlibrary('ggplot2')\nlibrary('rnaturalearth')\nlibrary('rnaturalearthdata')\n\n# |- get spatial data ----------\nworld <- ne_countries(scale = 'medium', returnclass = 'sf')\n\n# |- read in data -----------------\ncast_loc <- readRDS('../data/01_ctd-locations.rds')\n\n\n\n\nCode\nall_cast_map <- ggplot()+\n  geom_sf(data = world, fill = 'green')+\n  geom_point(aes(x = -cast_loc$lon, y = cast_loc$lat,\n                 shape = cast_loc$tod, col = cast_loc$tod),\n             position = position_jitter(width = .05, height = 0.05))+\n  coord_sf(xlim = c(-65,-62), ylim = c(30,33))+\n  theme_bw()+\n  labs(x = \"\",y = \"\", shape = \"\", color = \"\")+\n  scale_color_manual(values = c('beige','black'))+\n  theme(panel.background = element_rect(fill = 'cornflowerblue'),\n        axis.text.x = element_text(angle = 45, hjust = c(1,1)),\n        legend.position = 'bottom')\n\nprint(all_cast_map)\n\n\n\n\n\n\n\nCode\nlibrary(DT)\nlibrary(dplyr)\nuvp_data <- readRDS('../data/01_uvp-trim-final.rds')\n\n# get max_d\npar_max_d <- function(par_df) {\n  par_df[['depth']] |> max()\n}\n\nmax_d <- uvp_data$par_files |> \n  sapply(par_max_d)\n\nuvp_data$meta |> \n  select(profileid, latitude,longitude, cruise, sampledate) |> \n  left_join(data.frame(profileid = names(uvp_data$par_files),\n                       max_depth = max_d)) |> \n  group_by(cruise) |> \n  datatable()"
  },
  {
    "objectID": "main_01_ctd_interp.html",
    "href": "main_01_ctd_interp.html",
    "title": "Physical Backdrop - water column parameters across study period",
    "section": "",
    "text": "Code\nrm(list = ls())\nlibrary(ggplot2)\nlibrary(ggpubr)\nfull_proj_values <- readRDS('../data/ctd_02_interp-grid.rds')$full_proj\n\nODV_colours <- c(\"#feb483\", \"#d31f2a\", \"#ffc000\", \"#27ab19\", \"#0db5e6\", \"#7139fe\", \"#d16cfa\")\n\n# set up\nvalue_class <- function(cruise){\n  ret_list <- vector('list',4)\n  names(ret_list) <- c('Sal',\"Temperature\",'RFU','DO')\n  return(ret_list)\n}\n\nfull_proj_plot <- list()\nfull_proj_plot$early <- value_class()\nfull_proj_plot$late <- value_class()\n\n\n# |- Plotting -----------------------\nfor(i in 1:length(full_proj_plot)) {\n  \n  full_proj_plot[[i]]$Sal <- ggplot()+\n    geom_tile(data = full_proj_values[[i]]$Sal,\n              aes(x = Date,\n                  y = Depth,\n                  fill = Sal)) +\n    scale_y_reverse()+\n    scale_fill_distiller(palette = 'Spectral')+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    scale_x_datetime(date_labels = '%Y-%b')+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"Sal [PSU]\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n  full_proj_plot[[i]]$Temperature <- ggplot()+\n    geom_tile(data = full_proj_values[[i]]$Temperature,\n              aes(x = Date,\n                  y = Depth,\n                  fill = Temperature)) +\n    scale_y_reverse()+\n    scale_x_datetime(date_labels = '%Y-%b')+\n    scale_fill_gradientn(colors = rev(ODV_colours))+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"Temperature\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n  full_proj_plot[[i]]$RFU <- ggplot() + \n    geom_tile(data = full_proj_values[[i]]$RFU,\n              aes(x = Date,\n                  y = Depth,\n                  fill = RFU)) +\n    scale_y_reverse()+\n    scale_x_datetime(date_labels = '%Y-%b')+\n    scale_fill_distiller(palette = 'BuGn',\n                         direction = 1)+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"RFU\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n  full_proj_plot[[i]]$DO <- ggplot() + \n    geom_tile(data = full_proj_values[[i]]$DO,\n              aes(x = Date,\n                  y = Depth,\n                  fill = DO)) +\n    scale_y_reverse()+\n    scale_fill_distiller(palette = 'GnBu',\n                         direction = 1)+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"DO\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n}\n\n\n\n\nCode\nggarrange(full_proj_plot$early$Sal +\n            theme(axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1)),\n          full_proj_plot$late$Sal +\n            theme(axis.text.y = element_blank(),\n                  axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1))+\n            labs(y = \"\"),\n          common.legend = T,\n          legend = 'right',\n          nrow = 1,\n          widths = c(0.2,0.8),\n          align = 'hv')\n\n\n\n\n\nFigure 1a. Salinity values across whole study period interpolated from ctd casts.\n\n\n\n\n\n\nCode\nggarrange(full_proj_plot$early$Temperature +\n            theme(axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1)),\n          full_proj_plot$late$Temperature +\n            theme(axis.text.y = element_blank(),\n                  axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1))+\n            labs(y = \"\"),\n          common.legend = T,\n          legend = 'right',\n          nrow = 1,\n          widths = c(0.2,0.8),\n          align = 'hv')\n\n\n\n\n\nFigure 1b. Temperature values across whole study period interpolated from ctd casts.\n\n\n\n\n\n\nCode\nggarrange(full_proj_plot$early$RFU +\n            theme(axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1)),\n          full_proj_plot$late$RFU +\n            theme(axis.text.y = element_blank(),\n                  axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1))+\n            labs(y = \"\"),\n          common.legend = T,\n          legend = 'right',\n          nrow = 1,\n          widths = c(0.2,0.8),\n          align = 'hv')\n\n\n\n\n\nFigure 1c. RFU values across whole study period interpolated from ctd casts.\n\n\n\n\n\n\nCode\nggarrange(full_proj_plot$early$DO +\n            theme(axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1)),\n          full_proj_plot$late$DO +\n            theme(axis.text.y = element_blank(),\n                  axis.text.x = element_text(angle = 45,\n                                             hjust = 1,\n                                             vjust = 1))+\n            labs(y = \"\"),\n          common.legend = T,\n          legend = 'right',\n          nrow = 1,\n          widths = c(0.2,0.8),\n          align = 'hv')\n\n\n\n\n\nFigure 1d. DO values across whole study period interpolated from ctd casts."
  },
  {
    "objectID": "main_02_PC-Clusters.html",
    "href": "main_02_PC-Clusters.html",
    "title": "Morphogroup Definition",
    "section": "",
    "text": "Code\nrm(list = ls())\nlibrary(DT)\nlibrary(EcotaxaTools)\nlibrary(ggplot2)\nlibrary(ggpubr)\nsource('../R/tools.R')\n\npca_results <- readRDS('../data/02_cope-pca-res.rds')\ncluster_res <- readRDS('../data/02_cluster-copepods.rds')\nA PCA was run on the morphological features for each vignette. Principle components with eigenvalues greater than 1 were considered. This comprised the first four PCs, which explained a total of 87.9% of the variance in the data (view the complete PCA results check supplemental information 2. The first two components explained 34.23% and 27.24% respectively. The first principle component was largely correlated with metrics associated with size (perimeter, feret diameter, fractal dimension, major axis). The second principle component is best described by darkness, where positive values indicate more transparent organisms and negative values are darker ones. Similar to Vilgraine et al.Â (2020), we observe the third PC to be best described by orientation and the fourth axis to be described by appendage visibility. It can be assumed that the orientation and appendage visibility of copepods are artefacts of the imaging method and not indicative of their ecology/behavior. For this reason, we chose to only include the first two axis for definition of morphogroups. A k-means cluster analysis was used to identify morphogroups within the first two PC-space. Four clusters were determined to be the optimal number of groups as it captured 65% of the variability in the morphospace and additional clusters added less than 10% explanatory power. Individual observations were assigned to morphogroups based on the k-means analysis, which was conducted using 1000 random starts. The analysis converged on consistent results across iterations."
  },
  {
    "objectID": "main_02_PC-Clusters.html#morphogroup-definition-separation",
    "href": "main_02_PC-Clusters.html#morphogroup-definition-separation",
    "title": "Morphogroup Definition",
    "section": "Morphogroup definition separation",
    "text": "Morphogroup definition separation\nThe morphogroups defined by clustering in the PC-morphology space do not lend themselves to clear groupings. However, by inspecting the groups in the context of the morphospace, it can determined the characteristics best used to describe each group. Visually, it was determined that Cluster 1 can best be described by larger and more transparent copepods. Cluster 2 follows large values of PC1 and low values of PC2, which can be interpreted as containing both large-sized and darker copepods. Cluster 3 was best described by low values of PC1, interpreted as correlating to smaller-sized individuals. Finally, cluster 4 contains individuals with moderate PC1 scores and low PC2 scores, indicating darker, medium-to-small sized copepods.\nTo assure that these clusters were not trivial, each morphogroupâs scores on PC1 and PC2 were compared with pairwise Dunn tests. It was revealed that all groups were significantly different from one another along PC1 (p < 0.001 following Bonferroni correction for all groups, Supplemental 2). On PC2, cluster 2 and cluster 4 were not significantly different (p = 1), while all other groups were significantly different from one another (p < 0.001).\n\n\nCode\nFSA::dunnTest(PC1 ~ as.factor(cluster),\n              data = cluster_res,\n              method = 'bonferroni')$res |> \n  datatable(caption = 'PC1 Dunn multiple comprison test with bonferroni correction')\n\n\n\n\n\n\n\nCode\npc1_dist <- ggplot(cluster_res) +\n  geom_boxplot(aes(x = as.factor(cluster),\n                   y = PC1,\n                   fill = as.factor(cluster))) +\n  scale_fill_manual(values = gg_cbb_col(4))+\n  labs(x = \"Morphogroup\", y = 'PC1 - Size: Small-to-Large') + \n  theme_pubr() +\n  theme(legend.position = 'none')\n\n\nFSA::dunnTest(PC2 ~ as.factor(cluster),\n              data = cluster_res,\n              method = 'bonferroni')$res |> \n  datatable(caption = 'PC2 Dunn multiple comprison test with bonferroni correction')\n\n\n\n\n\n\n\nCode\npc2_dist <- ggplot(cluster_res) +\n  geom_boxplot(aes(x = as.factor(cluster),\n                   y = PC2,\n                   fill = as.factor(cluster))) +\n  scale_fill_manual(values = gg_cbb_col(4))+\n  labs(x = \"Morphogroup\", y = 'PC2 - Trans: dark-to-light') + \n  theme_pubr()+\n  theme(legend.position = 'none')\n\nggarrange(pc1_dist, pc2_dist, nrow=1)\n\n\n\n\n\nAdditionally, to exemplify morphogroup differences along original parameters, we plotted the distribution of individual metrics for key morphological parameters representing size and transparency. This clearly shows that morphogroups 1 & 2 are larger while 3 & 4 are smaller. Additionally morphogroups 2 & 4 are darker while 1 & 3 are smaller. Thus, the hypothesis that size and color will influence DVM signal would predict morphogroup 2 to have the largest DVM signal and morphogroup 3 to have the smallest DVM signal.\n\n\nCode\nuvp_data <- readRDS('../data/01_uvp-trim-final.rds') |> \n  trim_to_cope()\n\n####\n# Assign Clusters to individuals ########\n####\n\nfor(i in 1:length(uvp_data$zoo_files)) {\n  idx <- which(cluster_res$orig_id %in% uvp_data$zoo_files[[i]]$orig_id)\n  uvp_data$zoo_files[[i]]$cluster <- cluster_res$cluster[idx]\n}\n\nall_copes <- uvp_data$zoo_files |> \n  list_to_tib('profileid')\n\n# convert to mm\nall_copes$feret <- all_copes$feret * unique(uvp_data$meta$acq_pixel)\n\nferet_plot <- ggplot(all_copes) + \n  geom_boxplot(aes(x = as.factor(cluster),\n                   y = feret,\n                   fill = as.factor(cluster))) +  scale_fill_manual(values = gg_cbb_col(4))+\n  labs(x = \"Morphogroup\", y = 'Feret Diam [mm]') + \n  theme_pubr()+\n  theme(legend.position = 'none')\n\nmeanGrey_plot <- ggplot(all_copes) + \n  geom_boxplot(aes(x = as.factor(cluster),\n                   y = mean,\n                   fill = as.factor(cluster))) +  scale_fill_manual(values = gg_cbb_col(4))+\n  labs(x = \"Morphogroup\", y = 'Mean Grey Value') + \n  theme_pubr()+\n  theme(legend.position = 'none')\n\nggarrange(feret_plot, meanGrey_plot, rnow = 1)"
  },
  {
    "objectID": "main_03_Vert-Distrib.html",
    "href": "main_03_Vert-Distrib.html",
    "title": "Vertical Distribution of Morphotypes",
    "section": "",
    "text": "To understand the vertical distribution of the different morphogroups, the concentration of each cluster was calculated in a 20m-bin then averaged across all profiles in the study (following the average-cast method described in Barth & Stone 2022. Using the average-cast approach is beneficial as it allows for data to be included from casts with different max descents, so long as an entire 20m depth bin was sampled, it is included.Averages were calculated separately for daytime and nighttime casts.\nThen to better visualize day/night differences, the proportional difference in each depth bin was calculated. For each \\(i^{th}\\) depth bin in all \\(N\\) bins, \\(PropDiff_{i} = \\frac{Night_{i} - Day_i}{\\sum_{i}^N{Night_i+Day_i}}\\). This technique shows how much more a nighttime abundance is compared to the daytime relative to the total, average concentration of the morphogroup. Thus, morphogroup proportional differences can be compared to see overall trends in diel patterns across the water column. However, it is important to note that this method does not directly evaluate any magnitude of DVM."
  },
  {
    "objectID": "main_03_Vert-Distrib.html#figures-take-aways",
    "href": "main_03_Vert-Distrib.html#figures-take-aways",
    "title": "Vertical Distribution of Morphotypes",
    "section": "Figures & Take-aways:",
    "text": "Figures & Take-aways:\nFirst, it is clear the smaller-sized morphogroups (3 & 4) are in higher average abundances in all areas of the water column. This is again expected as smaller zooplankton dominate in this system. For all morphogroups, nighttime abundances are higher in the surface (0-200m) compared to the daytime surface abundances. Overall abundances are lowest around 300m with a daytime abundance dominated region around the upper-to-mid mesopelagic (400-600m). This pattern shows a clear DVM occurring in all morphogroups between around 150m-600m. Below 600m, there is no trend in day/night differences and the variation in proportional differences seems to be random noise. This is expected as it would be nearly impossible for regular migrations of individual copepods to move below 600m on a daily basis. It is also clear that the variability between casts is extremely large. Often the standard deviation of depth-bin abundance is much larger than the average abundance. This is in part driven by high variability between cruises which occurred in different seasons getting averaged together. However, there is also large variability between individual casts, which can be driven by the small sampling volume of the UVP as described by Barth & Stone 2022. This variation driven by the sampling variability led to the need for new analysis methods on in-situ imaging data used in this paper.\n\n\nCode\n####\n# Get project-wide night-day differences #######\n####\n\nrm(list = ls())\nlibrary(EcotaxaTools)\nlibrary(ggplot2)\nlibrary(ggpubr)\nsource('../R/tools.R')\n\ncluster_cope <- readRDS('../data/03_cluster-conc.rds')\nuvp_data  <- readRDS('../data/01_uvp-trim-final.rds') |> trim_to_cope()\n\ncast_times <- list(day = uvp_data$meta$profileid[which(uvp_data$meta$tod == 'day')],\n                   night = uvp_data$meta$profileid[which(uvp_data$meta$tod == 'night')])\n\navg_cope <- cluster_cope |> \n  average_casts(cast_times) |> \n  lapply(bin_format)\n\n\n###\n# Create cluster profiles ####\n###\n\n# |- Area Profile ----------------------------------------------------\n# profile_plot <- ggplot() +\n#   geom_area(data = avg_cope$day,\n#             aes(x = mp, y = -mean, fill = as.factor(group))) +\n#   geom_area(data = avg_cope$night,\n#             aes(x = mp, y = mean, fill = as.factor(group)))+\n#   geom_hline(yintercept = 0)+\n#   coord_flip()+\n#   scale_x_reverse(expand = c(0,0))+\n#   scale_y_continuous(breaks = c(-2:2),\n#                      labels = abs(-2:2),\n#                      expand = c(0,0))+\n#   labs(x = \"Depth [m]\",\n#        y = \"Concentration\",\n#        fill = 'Cluster')+\n#   scale_fill_manual(values = gg_cbb_col(4))+\n#   theme_pubr()\n\n# |- Concentration Profile --------------------------------------------\n\ncluster_profile <- function(k) {\n  ret_plot <- ggplot()+\n    geom_rect(data = avg_cope$day[avg_cope$day$group == k,],\n              aes(xmin = min_d, xmax = max_d,\n                  ymin = 0, ymax = -mean),\n              fill = dn_cols['day']) +\n    geom_errorbar(data = avg_cope$day[avg_cope$day$group == k,],\n                  aes(x = mp, ymin = -mean, ymax = -(mean+sd)),\n                  alpha = .25) +\n    geom_rect(data = avg_cope$night[avg_cope$night$group == k,],\n              aes(xmin = min_d, xmax = max_d,\n                  ymin = 0, ymax = mean),\n              fill = dn_cols['night']) +\n    geom_errorbar(data = avg_cope$night[avg_cope$night$group == k,],\n                  aes(x = mp, ymin = mean, ymax = (mean+sd)),\n                  alpha = .25)+\n    labs(x = 'Depth [m]', y = 'Concentration [indv./m3]')+\n    coord_flip()+\n    scale_x_reverse(expand = c(0,0))+\n    scale_y_continuous(position = 'right',\n                       labels = abs) +\n    theme_pubr()\n\n  return(ret_plot)\n}\n\ncluster_1_profile <- cluster_profile(1)\ncluster_2_profile <- cluster_profile(2)\ncluster_3_profile <- cluster_profile(3)\ncluster_4_profile <- cluster_profile(4)\n\n# |- Proportional Difference ----------------------------------------\n\n# calculate the proportional difference between night and day profiles\n# this approach calculates the bin-specific night-day difference\n# \n\ndiff_profile <- function(k) {\n  ni_conc <- avg_cope$night$mean[which(avg_cope$night$group == k)]\n  day_conc <- avg_cope$day$mean[which(avg_cope$day$group == k)]\n  \n  diel_diff <- (ni_conc - day_conc) / sum(c(ni_conc, day_conc))\n  \n  mp <- avg_cope$night$mp[which(avg_cope$night$group == k)]\n  \n  ret_plot <- ggplot() + \n    geom_point(aes(x = mp, y = diel_diff),\n               size = 1.5, color = 'black')+\n    geom_line(aes(x = mp, y=diel_diff)) +\n    labs(x = 'Depth [m]', y = 'Proportional Difference') +\n    geom_hline(yintercept = 0) +\n    coord_flip()+\n    scale_x_reverse(expand = c(0,0)) +\n    scale_y_continuous(expand = c(0,0),\n                       position = 'right',\n                       labels = abs) +\n    theme_pubr()\n  \n  return(ret_plot)\n}\n\ndiff_1_profile <- diff_profile(1)\ndiff_2_profile <- diff_profile(2)\ndiff_3_profile <- diff_profile(3)\ndiff_4_profile <- diff_profile(4)\n\n\n\n\nCode\n#| column: page-inset\n\nggarrange(cluster_1_profile,\n          cluster_2_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()),\n          cluster_3_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()),\n          cluster_4_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()),\n          diff_1_profile,\n          diff_2_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()),\n          diff_3_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()),\n          diff_4_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()),\n          nrow = 2, ncol = 4,\n          widths = c(1,.9,.9,.9))\n\n\n\n\n\nWe can zoom in on the upper 600m to get a better picture of the changes in the upper layers.\n\n\nCode\n#| column: screen-inset\n\nggarrange(cluster_1_profile +\n            xlim(600,0),\n          cluster_2_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()) +\n            xlim(600,0),\n          cluster_3_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()) +\n            xlim(600,0),\n          cluster_4_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()) +\n            xlim(600,0),\n          diff_1_profile +\n            xlim(600,0),\n          diff_2_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()) +\n            xlim(600,0),\n          diff_3_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()) +\n            xlim(600,0),\n          diff_4_profile + \n            theme(axis.text.y = element_blank(),\n                  axis.title.y = element_blank()) +\n            xlim(600,0),\n          nrow = 2, ncol = 4,\n          widths = c(1,.9,.9,.9))"
  },
  {
    "objectID": "main_04_WMD-by-morphogroup.html",
    "href": "main_04_WMD-by-morphogroup.html",
    "title": "Weighted Mean Depth of Morphogroups",
    "section": "",
    "text": "Weighted mean depth is a commonly used metric to describe zooplankton populations and vertical distributions. Zooplankton populations can often be found in bimodal patterns throughout the water column, with a subsurface peak and a deeper mesopelagic peak see here. The WMD of a distribution effectively provides a center of mass for the zooplankton in the water column. However, interpreting the WMD often requires context as the depth itself may not be informative. WMD can be particularly useful for DVM studies, as it can show the differences in daytime and nighttime distributions Ohman & Romagnan 2016. Additionally, by calculating the average WMD across multiple samples, the variability (or standard deviation) in WMD can be informative to the overall spread of the zooplankton distribution throughout the water column.\nIn this study, because profiles extend to different depths and sampling effort (volume) is inconsistent between profiles, even in a depth bin, directly calculating the average WMD is not feasible. Instead, we take a depth-bin constrained bootstrap approach to define WMD for each morphogroup. In this approach, the concentration of each morphogroup was calculated in 20m depth bins for each profile. Then all profiles from the same time of day were âpooledâ providing a distribution of concentration values in each depth bin. From these distribution a value, \\(WMD^*\\), can be calculated where \\(d_i\\) is a 20m depth bin between (0m,20m] and (1180m,1200m] and \\(conc_i^*\\) is a randomly selected measured concentration. This processes was iterated 999 times to create a distribution of \\(WMD^*\\) for each morphogroup (\\(mg\\)) and time of day (\\(tod\\)). This effectively is re-sampling of the study region for a given time of day to construct new profiles. \\[WMD^*_{mt, tod} = \\sum_{i}^{N = 60}{\\frac{d_i(conc^*_{i,mg,tod})}{\\sum_i^{N = 60}{conc^*_{i,mg,tod}}}}\\] From the distribution of \\(WMD^*\\), the mean and 95% confidence interval can be calculated. The confidence interval will be widened both by the spread of zooplankton through the water column and the variability between profiles. This provides the ability to directly quantify a DVM signal, as the daytime and nighttime confidence intervals should not overlap if there is a consistent and compact trend of copepods occupying distinct layers of the water column. Following the hypothesis H1, we would expect the DVM signal to be largest for Morphogroup 2, as it contains the larger and darker copepods. It follows that Morphogroup 3 should then have the smallest DVM signal."
  },
  {
    "objectID": "main_04_WMD-by-morphogroup.html#key-figures-and-takeaways",
    "href": "main_04_WMD-by-morphogroup.html#key-figures-and-takeaways",
    "title": "Weighted Mean Depth of Morphogroups",
    "section": "Key Figures and Takeaways",
    "text": "Key Figures and Takeaways\nShown in the figure below, it can be seen that all morphogroups have distinct daytime and nighttime WMDs. This indicates a clear signal for DVM. Generally, the nighttime WMD confidence intervals are similar across all morphogroups, suggesting all groups concentrate towards the surface at night. Additionally, daytime WMD intervals span a deeper range for all morphogroups. Interestingly, the average daytime WMD for morphogroups 1 and 2 is deeper than morphogroups 3 and 4. The daytime WMD confidence intervals between MGs 1 & 2 are non-overlapping with MG3 and nearly non-overlapping with MG4. This suggests that the larger copepods contained in MG1 and MG2 are clearly occupying deeper areas of the water column, supporting H1 as larger copepods will have a larger DVM signal. However, with this data we are not able to detect any clear difference in DVM signal based on transparency as the daytime WMD intervals are nearly completely overlapping between MG1 and MG2 and between MG3 and MG4. \n\n\nCode\nlibrary(ggplot2)\nlibrary(ggpubr)\nsource('../r/tools.R')\n\nboot_wmd <- readRDS('../data/03_wmd-all-merged.rds')\n\nday_summary <- boot_wmd$day |> lapply(quantile, probs = c(0.025,0.5,0.975))\nnight_summary <- boot_wmd$night |> lapply(quantile, probs = c(0.025,0.5,0.975))\n\nwmd_df <- data.frame(cluster = rep(1:4, 2),\n                     tod = rep(c('day','night'),each = 4),\n                     low = rep(NA, 8),\n                     mid = rep(NA, 8),\n                     high = rep(NA, 8))\n\nfor(i in 1:4) {\n  \n  wmd_df$low[which(wmd_df$tod == 'day' & \n                     wmd_df$cluster == i)] <- day_summary[[i]][['2.5%']]\n  wmd_df$mid[which(wmd_df$tod == 'day' & \n                     wmd_df$cluster == i)] <- day_summary[[i]][['50%']]\n  wmd_df$high[which(wmd_df$tod == 'day' & \n                     wmd_df$cluster == i)] <- day_summary[[i]][['97.5%']]\n  \n  \n  wmd_df$low[which(wmd_df$tod == 'night' & \n                     wmd_df$cluster == i)] <- night_summary[[i]][['2.5%']]\n  wmd_df$mid[which(wmd_df$tod == 'night' & \n                     wmd_df$cluster == i)] <- night_summary[[i]][['50%']]\n  wmd_df$high[which(wmd_df$tod == 'night' & \n                     wmd_df$cluster == i)] <- night_summary[[i]][['97.5%']]\n  \n}\n\n\nggplot(wmd_df) +\n  geom_point(aes(x = cluster,\n                 y = mid,\n                 color = tod),\n             position = position_dodge(width = .5),\n             size = 2) +\n  geom_errorbar(aes(x = cluster,\n                    ymin = low,\n                    ymax = high,\n                    color = tod),\n                width = .25,\n                position = position_dodge(width = .5),\n                size = 1) +\n  scale_color_manual(values = c(dn_cols['day'],dn_cols['night'])) +\n  scale_y_reverse(limits = c(600,0)) +\n  labs(y = 'Depth [m]', x = 'Morphogroup Cluster', col = \"\")+\n  theme_pubr()"
  },
  {
    "objectID": "main_05_all-copepod-occupancy.html",
    "href": "main_05_all-copepod-occupancy.html",
    "title": "Copepod Occurence Model",
    "section": "",
    "text": "A key challenge with the UVP, and other in-situ imaging tools, is the low sampling volume can make it challenging to accurately report organisms with occur at low abundances. This is a particularly large challenge in an oligotrophic system such as the Sargasso Sea Barth & Stone 2022. Bisson et al.Â (2022) note that at low sampling volumesâ¦"
  },
  {
    "objectID": "main_05_all-copepod-occupancy.html#methodology",
    "href": "main_05_all-copepod-occupancy.html#methodology",
    "title": "Copepod Occurence Model",
    "section": "Methodology",
    "text": "Methodology"
  },
  {
    "objectID": "main_05_all-copepod-occupancy.html#key-figures-and-take-aways",
    "href": "main_05_all-copepod-occupancy.html#key-figures-and-take-aways",
    "title": "Copepod Occurence Model",
    "section": "Key Figures and Take aways",
    "text": "Key Figures and Take aways"
  },
  {
    "objectID": "supp_01_ctd-by-cruise.html",
    "href": "supp_01_ctd-by-cruise.html",
    "title": "CTD-interpolation across cruises",
    "section": "",
    "text": "Code\nrm(list = ls())\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(suncalc)\nlibrary(EcotaxaTools)\n\n####\n# Data loading and set up #######\n####\nplot_values <- readRDS('../data/ctd_02_interp-grid.rds')$by_cruise\n\n# |- ctd data format -------------------------------\nctd_data <- readRDS('../data/01_ctd-trim-final.rds')\n\n#mush all casts together\nall_casts <- ctd_data|> list_to_tib('ctd_orgfilename')\nall_casts <- all_casts[,-1]\n\n#trim mess from the data\nall_casts <- all_casts[-which(is.na(all_casts$Depth)),]\nall_casts <- all_casts[-which(is.na(all_casts$Sal)),]\nall_casts <- all_casts[-which(is.na(all_casts$DO)),]\nall_casts <- all_casts[-which(is.na(all_casts$RFU)),]\n\n#keep only shallow casts\nall_casts <- all_casts[which(all_casts$Depth < 1200),]\n\n# |- Time of Day ----------------------------------\n\n# set up\nall_casts$tod <- rep(NA, nrow(all_casts))\nall_casts$cruise <- paste0(all_casts$proj_id, all_casts$cruise_id)\n\nfor(i in 1:length(ctd_data)) {\n  \n  #get time\n  casttime <- ctd_data[[i]]$Date[1]\n  \n  # assign tod\n  suntimes <- getSunlightTimes(\n    date = as.Date(casttime),\n    lat = ctd_data[[i]]$Lat[1],\n    lon = ctd_data[[i]]$Lon[1],\n    tz = 'GMT'\n  )\n  \n  if(casttime < suntimes$nauticalDawn | casttime > suntimes$nauticalDusk) {\n    tod <- 'night'\n  } else if (casttime > suntimes$nauticalDawn & casttime < suntimes$nauticalDusk) {\n    tod <- 'day'\n  } else {\n    tod <- 'twilight'\n  }\n  \n  #match to mega-df\n  all_casts$tod[all_casts$ctd_orgfilename == names(ctd_data)[i]] = tod\n}\n\n\n###\n# Plotting ################\n###\n\n#save colors\nODV_colours <- c(\"#feb483\", \"#d31f2a\", \"#ffc000\", \"#27ab19\", \"#0db5e6\", \"#7139fe\", \"#d16cfa\")\n\n# set up\nvalue_class <- function(cruise){\n  ret_list <- vector('list',4)\n  names(ret_list) <- c('Sal',\"Temperature\",'RFU','DO')\n  return(ret_list)\n}\n\ncruises <- unique(names(plot_values))\nplot_list <- lapply(cruises,value_class)\nnames(plot_list) <- cruises\n\n# |- Loop out for all casts -----------------------------\nfor(i in 1:length(plot_list)) {\n  cast_df <- all_casts[all_casts$cruise == names(plot_list)[i],]\n  \n  plot_list[[i]]$Sal <- ggplot()+\n    geom_tile(data = plot_values[[i]]$Sal,\n              aes(x = Date,\n                  y = Depth,\n                  fill = Sal)) +\n    geom_vline(data = cast_df,\n               aes(xintercept = Date,\n                   color = tod),\n               size = 1) +\n    scale_y_reverse()+\n    scale_fill_distiller(palette = 'Spectral')+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"Sal [PSU]\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n  plot_list[[i]]$Temperature <- ggplot()+\n    geom_tile(data = plot_values[[i]]$Temperature,\n              aes(x = Date,\n                  y = Depth,\n                  fill = Temperature)) +\n    geom_vline(data = cast_df,\n               aes(xintercept = Date,\n                   color = tod),\n               size = 1) +\n    scale_y_reverse()+\n    scale_fill_gradientn(colors = rev(ODV_colours))+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"Temperature\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n  plot_list[[i]]$RFU <- ggplot() + \n    geom_tile(data = plot_values[[i]]$RFU,\n              aes(x = Date,\n                  y = Depth,\n                  fill = RFU)) +\n    geom_vline(data = cast_df,\n               aes(xintercept = Date,\n                   color = tod),\n               size = 1) +\n    scale_y_reverse()+\n    scale_fill_distiller(palette = 'BuGn',\n                         direction = 1)+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"RFU\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n  \n  plot_list[[i]]$DO <- ggplot() + \n    geom_tile(data = plot_values[[i]]$DO,\n              aes(x = Date,\n                  y = Depth,\n                  fill = DO)) +\n    geom_vline(data = cast_df,\n               aes(xintercept = Date,\n                   color = tod),\n               size = 1) +\n    scale_y_reverse()+\n    scale_fill_distiller(palette = 'GnBu',\n                         direction = 1)+\n    scale_color_manual(breaks = c('day','night'),\n                       values = c('grey','black'))+\n    labs(x = \"\",y = \"Depth [m]\", fill = \"DO\",\n         color = \"\")+\n    theme_pubr()+\n    theme(legend.position = 'right')+\n    coord_cartesian(expand = 0)\n}\n\n\n\n\nCode\nfor(i in 1:length(plot_list)) {\n  \n  outplot <- ggarrange(plot_list[[i]]$Sal + \n                         guides(color = 'none')+\n                         theme(axis.text.x = element_blank()),\n                        plot_list[[i]]$Temperature+ \n                         guides(color = 'none')+\n                         theme(axis.text = element_blank())+\n                         labs(y = \"\"),\n                        plot_list[[i]]$RFU + \n                         guides(color = 'none'),\n                        plot_list[[i]]$DO +\n                         guides(color = 'none') +\n                         theme(axis.text.y = element_blank())+\n                         labs(y = \"\"),\n                        ncol = 2, nrow = 2,\n                       align = 'hv')\n              \n  annotate_figure(outplot, top = text_grob(paste0('Cruise: ',cruises[i]))) |> print()\n}\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day.\n\n\n\n\n\n\n\nPhysical parameters across individual cruises. Vertical bars indicate CTD casts events with black indicating night and grey indicating day."
  },
  {
    "objectID": "supp_02_pc-extended-info.html",
    "href": "supp_02_pc-extended-info.html",
    "title": "Additional PCA Information",
    "section": "",
    "text": "Additional Information related to the PCA used in this analysis are visible here. View the main conclusions from the analysis here.\nSpecific loading scores are available for each of the four dimensions:"
  },
  {
    "objectID": "supp_02_pc-extended-info.html#identifying-optimal-number-of-clusters-in-k-means-cluster",
    "href": "supp_02_pc-extended-info.html#identifying-optimal-number-of-clusters-in-k-means-cluster",
    "title": "Additional PCA Information",
    "section": "Identifying optimal number of clusters in k-means cluster",
    "text": "Identifying optimal number of clusters in k-means cluster\n4 clusters were chosen as the optimal number of clusters\n\n\nCode\n# get just the pc's we want, size and transparency\nmain_pcs <- pca_results$ind$coord[,c(1,2)]\n\n# |- Identifying the optimal clusters ----\n\ncluster_ss <- function(k, x) {\n  w <- kmeans(x, centers = k, iter.max= 100, nstart = 1000)\n  return(1 - (w$tot.withinss/w$totss))\n}\n\ncluster_curve <- c(1:10) |>  \n  sapply(cluster_ss, main_pcs) |> \n  suppressWarnings()\nplot(cluster_curve~c(1:10), type = 'b', xlab = 'Number of Clusters',ylab = 'Within SS / Total SS')\n\n\n\n\n\nCode\nprint('Explanitory power added for each new center added:')\n\n\n[1] \"Explanitory power added for each new center added:\"\n\n\nCode\nrbind(numCluster = seq(2,10,1), AddedExplain= diff(cluster_curve))\n\n\n                  [,1]      [,2]      [,3]       [,4]       [,5]       [,6]\nnumCluster   2.0000000 3.0000000 4.0000000 5.00000000 6.00000000 7.00000000\nAddedExplain 0.3432048 0.2003371 0.1025766 0.06321141 0.04564529 0.03212488\n                   [,7]       [,8]        [,9]\nnumCluster   8.00000000 9.00000000 10.00000000\nAddedExplain 0.02464068 0.02295813  0.01461537\n\n\nCode\n# Four clusters seems to be the most elbowish\n# Explains ~65% of variability, adding k is >10% variability"
  },
  {
    "objectID": "supp_03_cluster-conc.html",
    "href": "supp_03_cluster-conc.html",
    "title": "Cruise Cluster Concentration",
    "section": "",
    "text": "Shown are the integrated abundances from 0-1200m. Overall copepod abundance across all morphogroups followed similar patterns. In all months, morphogroups 1 and 2 were less abundant, which is expected for larger individuals. Generally, abundance peaked in the spring to summer and was at lower values during the fall and winter.\n\n\nCode\nrm(list = ls())\nlibrary(EcotaxaTools)\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(lubridate)\nsource('../R/tools.R')\n\nconc_data <- readRDS('../data/03_cluster-conc.rds') |> \n  lapply(bin_format) |> \n  lapply(function(x) x[which(x$max_d <= 1200),1:3]) # this is really ugly bug fix 1:3, need to fix in package\n  \nuvp_data_meta <- readRDS('../data/01_uvp-trim-final.rds')$meta\nuvp_data_meta$cruise_id <- paste0(uvp_data_meta$stationid,\n                                  uvp_data_meta$programid)\n\nuvp_data_meta$dateabv <- paste(year(uvp_data_meta$sampledate),\n                               month(uvp_data_meta$sampledate),\n                               '01', sep = '-') |> \n  as.Date()\n\ncruise_casts <- vector('list', length(unique(uvp_data_meta$dateabv)))\nnames(cruise_casts) <- unique(uvp_data_meta$dateabv)\nfor(i in 1:length(cruise_casts)) {\n  cruise_casts[[i]] <- uvp_data_meta$profileid[which(uvp_data_meta$dateabv == names(cruise_casts)[i])]\n}\n\navg_conc <- conc_data |> \n  average_casts(cruise_casts) |> \n  lapply(integrate_all, need_format = T, subdivisions = 1000) |> \n  lapply(intg_to_tib) |> \n  list_to_tib('date')\n\n\navg_conc$date <- avg_conc$date |> as.Date()\n\nintg_plot_early <- ggplot(avg_conc[year(avg_conc$date) < 2020,]) +\n  geom_bar(aes(x = date,\n               y = intg,\n               fill = taxa),\n           stat = 'identity',\n           position = 'dodge') +\n  scale_fill_manual(values = gg_cbb_col(4)) +\n  scale_x_date(date_labels = '%Y-%m',\n               date_breaks = '1 month') +\n  scale_y_continuous(limits = c(0,750), expand = c(0,0)) +\n  labs(x = \"\", y = 'Integrated Abundance [indv./m^2]', fill = \"Morphogroup\") + \n  theme_pubr() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\n\nintg_plot <- ggplot(avg_conc[year(avg_conc$date) >= 2020,]) +\n  geom_bar(aes(x = date,\n               y = intg,\n               fill = taxa),\n           stat = 'identity',\n           position = 'dodge') +\n  scale_fill_manual(values = gg_cbb_col(4)) +\n  scale_x_date(date_labels = '%Y-%m',\n               date_breaks = '1 month') +\n  scale_y_continuous(limits = c(0,750), expand = c(0,0)) +\n  labs(x = \"\", y = 'Integrated Abundance [indv./m^2]', fill = \"Morphogroup\") + \n  theme_pubr() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\n\nggarrange(intg_plot_early,\n          intg_plot + theme(axis.title.y = element_blank(),\n                            axis.text.y = element_blank(),\n                            axis.line.y = element_blank(),\n                            axis.ticks.y = element_blank()),\n          common.legend = TRUE,\n          widths = c(0.18,.82),\n          nrow = 1)"
  }
]